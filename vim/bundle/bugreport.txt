uname -a
Darwin IL082 13.3.0 Darwin Kernel Version 13.3.0: Tue Jun  3 21:27:35 PDT 2014; root:xnu-2422.110.17~1/RELEASE_X86_64 x86_64


VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Sep 18 2014 08:17:35)
MacOS X (unix) version
Included patches: 1-430
Compiled by Homebrew
Huge version without GUI.  Features included (+) or not (-):
+acl             +comments        +ex_extra        +jumplist        -mouseshape      +path_extra      +signs           +textobjects     +writebackup
+arabic          +conceal         +extra_search    +keymap          +mouse_dec       +perl            +smartindent     +title           -X11
+autocmd         +cryptv          +farsi           +langmap         -mouse_gpm       +persistent_undo -sniff           -toolbar         -xfontset
-balloon_eval    +cscope          +file_in_path    +libcall         -mouse_jsbterm   +postscript      +startuptime     +user_commands   -xim
-browse          +cursorbind      +find_in_path    +linebreak       +mouse_netterm   +printer         +statusline      +vertsplit       -xsmp
++builtin_terms  +cursorshape     +float           +lispindent      +mouse_sgr       +profile         -sun_workshop    +virtualedit     -xterm_clipboard
+byte_offset     +dialog_con      +folding         +listcmds        -mouse_sysmouse  +python          +syntax          +visual          -xterm_save
+cindent         +diff            -footer          +localmap        +mouse_urxvt     -python3         +tag_binary      +visualextra     -xpm
-clientserver    +digraphs        +fork()          -lua             +mouse_xterm     +quickfix        +tag_old_static  +viminfo         
+clipboard       -dnd             -gettext         +menu            +multi_byte      +reltime         -tag_any_white   +vreplace        
+cmdline_compl   -ebcdic          -hangul_input    +mksession       +multi_lang      +rightleft       -tcl             +wildignore      
+cmdline_hist    +emacs_tags      +iconv           +modify_fname    -mzscheme        +ruby            +terminfo        +wildmenu        
+cmdline_info    +eval            +insert_expand   +mouse           +netbeans_intg   +scrollbind      +termresponse    +windows         
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
 2nd user vimrc file: "~/.vim/vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/local/share/vim"
Compilation: /usr/bin/clang -c -I. -Iproto -DHAVE_CONFIG_H   -DMACOS_X_UNIX  -Os -w -pipe -march=native -mmacosx-version-min=10.9 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      
Linking: /usr/bin/clang   -L. -L/usr/local/lib -L/usr/local/lib -Wl,-headerpad_max_install_names -o vim        -lm  -lncurses -liconv -framework Cocoa   -fstack-protector -L/usr/local/lib  -L/System/Library/Perl/5.16/darwin-thread-multi-2level/CORE -lperl -framework Python   -lruby.2.0.0 -lobjc   
--- Directories and Files ---
$VIM = "/usr/local/share/vim"
directory "/usr/local/share/vim" exists
$VIMRUNTIME = "/usr/local/share/vim/vim74"
directory "/usr/local/share/vim/vim74" exists
"/usr/local/share/vim/vim74/doc/help.txt" is readable
"/usr/local/share/vim/vim74/doc/tags" is readable
"/usr/local/share/vim/vim74/menu.vim" is readable
"/usr/local/share/vim/vim74/filetype.vim" is readable
"/usr/local/share/vim/vim74/syntax/synload.vim" is readable
--- Scripts sourced ---
  1: ~/.vimrc
  2: ~/dotfiles/vim/autoload/pathogen.vim
  3: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/filetype.vim
  4: ~/dotfiles/vim/bundle/mustache/ftdetect/mustache.vim
  5: ~/dotfiles/vim/bundle/vim-jade/ftdetect/jade.vim
  6: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/ftplugin.vim
  7: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/indent.vim
  8: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/syntax/syntax.vim
  9: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/syntax/synload.vim
 10: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/syntax/syncolor.vim
 11: ~/dotfiles/vim/bundle/editorconfig-vim/plugin/editorconfig.vim
 12: ~/dotfiles/vim/bundle/nerdtree/plugin/NERD_tree.vim
 13: ~/dotfiles/vim/bundle/nerdtree/autoload/nerdtree.vim
 14: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/path.vim
 15: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/menu_controller.vim
 16: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/menu_item.vim
 17: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/key_map.vim
 18: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/bookmark.vim
 19: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/tree_file_node.vim
 20: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim
 21: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/opener.vim
 22: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/creator.vim
 23: ~/dotfiles/vim/bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim
 24: ~/dotfiles/vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim
 25: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/autoloclist.vim
 26: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/balloons.vim
 27: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/checker.vim
 28: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/cursor.vim
 29: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/highlighting.vim
 30: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/loclist.vim
 31: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/modemap.vim
 32: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/notifiers.vim
 33: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/registry.vim
 34: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/signs.vim
 35: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic.vim
 36: ~/dotfiles/vim/bundle/syntastic/autoload/syntastic/util.vim
 37: ~/dotfiles/vim/bundle/vim-airline/plugin/airline.vim
 38: ~/dotfiles/vim/bundle/vim-airline/autoload/airline.vim
 39: ~/dotfiles/vim/bundle/vim-easymotion/plugin/EasyMotion.vim
 40: ~/dotfiles/vim/bundle/vim-fugitive/plugin/fugitive.vim
 41: ~/dotfiles/vim/bundle/vim-numbertoggle/plugin/number_toggle.vim
 42: ~/dotfiles/vim/bundle/vim-sensible/plugin/sensible.vim
 43: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/macros/matchit.vim
 44: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/plugin/getscriptPlugin.vim
 45: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/plugin/gzip.vim
 46: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/plugin/matchparen.vim
 47: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/plugin/netrwPlugin.vim
 48: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/plugin/rrhelper.vim
 49: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/plugin/spellfile.vim
 50: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/plugin/tarPlugin.vim
 51: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/plugin/tohtml.vim
 52: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/plugin/vimballPlugin.vim
 53: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/plugin/zipPlugin.vim
 54: ~/dotfiles/vim/bundle/syntastic/autoload/syntastic/log.vim
 55: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/init.vim
 56: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/parts.vim
 57: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions.vim
 58: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/quickfix.vim
 59: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/netrw.vim
 60: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/branch.vim
 61: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/syntastic.vim
 62: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim
 63: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/section.vim
 64: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/highlighter.vim
 65: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/themes/dark.vim
 66: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/themes.vim
 67: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/builder.vim
 68: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/util.vim
 69: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/default.vim
 70: ~/dotfiles/vim/bundle/nerdtree/syntax/nerdtree.vim
 71: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/ftplugin/javascript.vim
 72: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/indent/javascript.vim
 73: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/syntax/javascript.vim
 74: ~/dotfiles/vim/bundle/editorconfig-vim/autoload/editorconfig.vim
 75: ~/dotfiles/vim/bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim
 76: ~/dotfiles/vim/bundle/syntastic/syntax_checkers/javascript/eslint.vim
 77: ~/dotfiles/vim/bundle/syntastic/syntax_checkers/javascript/gjslint.vim
 78: ~/dotfiles/vim/bundle/syntastic/syntax_checkers/javascript/jscs.vim
 79: ~/dotfiles/vim/bundle/syntastic/syntax_checkers/javascript/jshint.vim
 80: ~/dotfiles/vim/bundle/syntastic/syntax_checkers/javascript/jsl.vim
 81: ~/dotfiles/vim/bundle/syntastic/syntax_checkers/javascript/jslint.vim
 82: ~/dotfiles/vim/bundle/syntastic/syntax_checkers/javascript/jsxhint.vim
 83: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/scripts.vim
 84: ~/dotfiles/vim/bundle/editorconfig-vim/CONTRIBUTORS
 85: ~/dotfiles/vim/bundle/editorconfig-vim/LICENSE
 86: ~/dotfiles/vim/bundle/editorconfig-vim/mkzip.sh
 87: ~/dotfiles/vim/bundle/editorconfig-vim/README.md
 88: ~/dotfiles/vim/bundle/mustache/example.mustache
 89: ~/dotfiles/vim/bundle/mustache/README.md
 90: ~/dotfiles/vim/bundle/nerdtree/README.markdown
 91: ~/dotfiles/vim/bundle/syntastic/CONTRIBUTING.md
 92: ~/dotfiles/vim/bundle/syntastic/LICENCE
 93: ~/dotfiles/vim/bundle/syntastic/README.markdown
 94: ~/dotfiles/vim/bundle/vim-airline/Gemfile
 95: ~/dotfiles/vim/bundle/vim-airline/LICENSE
 96: ~/dotfiles/vim/bundle/vim-airline/Rakefile
 97: ~/dotfiles/vim/bundle/vim-airline/README.md
 98: ~/dotfiles/vim/bundle/vim-easymotion/Gemfile
 99: ~/dotfiles/vim/bundle/vim-easymotion/Rakefile
100: ~/dotfiles/vim/bundle/vim-easymotion/README.md
101: ~/dotfiles/vim/bundle/vim-easymotion/TODO.md
102: ~/dotfiles/vim/bundle/vim-fugitive/CONTRIBUTING.markdown
103: ~/dotfiles/vim/bundle/vim-fugitive/README.markdown
104: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/autoload/vimball.vim
105: ~/dotfiles/vim/bundle/vim-jade/README.markdown
106: ~/dotfiles/vim/bundle/vim-easymotion/autoload/EasyMotion.vim
107: ~/dotfiles/vim/bundle/vim-easymotion/autoload/EasyMotion/highlight.vim
108: ~/dotfiles/vim/bundle/vim-numbertoggle/README.markdown
109: ~/dotfiles/vim/bundle/vim-sensible/README.markdown
110: /usr/local/Cellar/vim/7.4.430_1/share/vim/vim74/bugreport.vim
--- Options ---
  aleph=224           cryptmethod=zip     foldignore=#        lines=71            prompt              softtabstop=0       ttyfast
noarabic              cscopepathcomp=0    foldlevel=0       nolisp                pumheight=0       nospell               ttymouse=xterm2
  arabicshape         cscopeprg=cscope    foldlevelstart=-1 nolist                quoteescape=\       spellfile=          ttyscroll=999
noallowrevins         cscopequickfix=     foldmethod=manual   loadplugins       noreadonly            spelllang=en        ttytype=xterm
noaltkeymap         nocscoperelative      foldminlines=1      magic               redrawtime=2000     spellsuggest=best   undodir=.
  ambiwidth=single  nocscopetag           foldnestmax=20      makeef=             regexpengine=0    nosplitbelow        noundofile
noautochdir           cscopetagorder=0    formatexpr=         makeprg=make        relativenumber    nosplitright          undolevels=1000
  autoindent        nocscopeverbose       formatoptions=tcq   matchtime=5         remap               startofline         undoreload=10000
  autoread          nocursorbind          formatprg=          maxcombine=2        report=2            suffixesadd=        updatecount=200
noautowrite         nocursorcolumn        fsync               maxfuncdepth=100  norevins            noswapfile            updatetime=4000
noautowriteall      nocursorline        nogdefault            maxmapdepth=1000  norightleft           swapsync=fsync      verbose=0
  background=light    debug=              helpheight=20       maxmem=593460       ruler               switchbuf=          verbosefile=
nobackup            nodelcombine          helplang=en         maxmemtot=593460    rulerformat=        synmaxcol=3000      virtualedit=
  backupcopy=auto     dictionary=       nohidden              menuitems=25        scroll=34           syntax=           novisualbell
  backupext=~       nodiff                history=1000        modeline          noscrollbind          tabline=            warn
nobinary              diffexpr=         nohkmap               modelines=5         scrolljump=1        tabpagemax=50     noweirdinvert
nobomb                diffopt=filler    nohkmapp              modifiable          scrolloff=1         tabstop=4           whichwrap=b,s
nobreakindent       nodigraph             hlsearch            modified          nosecure              tagbsearch          wildchar=<Tab>
  breakindentopt=     display=lastline  noicon              nomore                selectmode=         taglength=0         wildcharm=0
  bufhidden=          eadirection=both    iconstring=         mouse=              shell=/bin/zsh      tagrelative         wildignore=
  buflisted         noedcompatible      noignorecase          mousetime=500       shellcmdflag=-c     tags=./tags,tags  nowildignorecase
  buftype=            encoding=utf-8      iminsert=0          nrformats=hex       shellquote=         tagstack            wildmenu
  cdpath=,,           endofline           imsearch=0        nonumber              shelltemp           term=xterm          wildmode=full
  cedit=^F            equalalways         includeexpr=        numberwidth=4       shellxquote=      notermbidi            wildoptions=
  charconvert=        equalprg=           incsearch           omnifunc=           shellxescape=       termencoding=       window=70
nocindent           noerrorbells          indentexpr=         operatorfunc=       shiftround        noterse               winheight=1
  cinoptions=         esckeys           noinfercase         nopaste               shiftwidth=4        textauto          nowinfixheight
  clipboard=          eventignore=      noinsertmode          pastetoggle=      noshortname         notextmode          nowinfixwidth
  cmdheight=1         expandtab           isprint=@,161-255   patchexpr=          showbreak=          textwidth=0         winminheight=1
  cmdwinheight=7    noexrc                joinspaces          patchmode=          showcmd             thesaurus=          winminwidth=1
  colorcolumn=        fileencoding=       key=              nopreserveindent    noshowfulltag       notildeop             winwidth=20
  columns=156         fileformat=unix     keymap=             previewheight=12  noshowmatch           timeout             wrap
nocompatible          fileignorecase      keymodel=         nopreviewwindow       showmode            timeoutlen=1000     wrapmargin=0
  concealcursor=      filetype=           keywordprg=man -s   printdevice=        showtabline=1     notitle               wrapscan
  conceallevel=0    nofkmap               langmap=            printencoding=      sidescroll=0        titlelen=85         write
  completefunc=       foldclose=          langmenu=           printfont=courier   sidescrolloff=5     titlestring=      nowriteany
noconfirm             foldcolumn=0        laststatus=2        printmbcharset=   nosmartcase           ttimeout            writebackup
nocopyindent          foldenable        nolazyredraw          printmbfont=      nosmartindent         ttimeoutlen=100     writedelay=0
  cpoptions=aABceFs   foldexpr=0        nolinebreak           printoptions=       smarttab            ttybuiltin
  backspace=indent,eol,start
  backupdir=.,~/tmp,~/
  backupskip=/tmp/*,/var/folders/xc/lxpzccr94cn38zmtdy4pdwvdnkgpvx/T/*
  breakat= ^I!@*-+;:,./?
  casemap=internal,keepascii
  cinkeys=0{,0},0),:,0#,!^F,o,O,e
  cinwords=if,else,while,do,for,switch
  comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
  commentstring=/*%s*/
  complete=.,w,b,u,t
  completeopt=menu,preview
  define=^\s*#\s*define
  directory=.,~/tmp,/var/tmp,/tmp
  errorfile=errors.err
  errorformat=%*[^"]"%f"%*\D%l: %m,"%f"%*\D%l: %m,%-G%f:%l: (Each undeclared identifier is reported only once,%-G%f:%l: for each function it appears in.),%-GIn file included from %f:%l:%c:,%-GIn file included from %f:%l:%c\,,%-GIn file included from %f:%l:%c,%-GIn file included from %f:%l,%-G%*[ ]from %f:%l:%c,%-G%*[ ]from %f:%l:,%-G%*[ ]from %f:%l\,,%-G%*[ ]from %f:%l,%f:%l:%c:%m,%f(%l):%m,%f:%l:%m,"%f"\, line %l%*\D%c%*[^ ] %m,%D%*\a[%*\d]: Entering directory %*[`']%f',%X%*\a[%*\d]: Leaving directory %*[`']%f',%D%*\a: Entering directory %*[`']%f',%X%*\a: Leaving directory %*[`']%f',%DMaking %*\a in %f,%f|%l| %m
  fileencodings=ucs-bom,utf-8,default,latin1
  fileformats=unix,dos,mac
  fillchars=vert:|,fold:-
  foldmarker={{{,}}}
  foldopen=block,hor,mark,percent,quickfix,search,tag,undo
  foldtext=foldtext()
  formatlistpat=^\s*\d\+[\]:.)}\t ]\s*
  grepformat=%f:%l:%m,%f:%l%m,%f  %l%m
  grepprg=grep -n $* /dev/null
  guicursor=n-v-c:block,o:hor50,i-ci:hor15,r-cr:hor30,sm:block
  helpfile=/usr/local/share/vim/vim74/doc/help.txt
  highlight=8:SpecialKey,@:NonText,d:Directory,e:ErrorMsg,i:IncSearch,l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,N:CursorLineNr,r:Question,s:StatusLine,S:StatusLineNC,c:VertSplit,t:Title,v:Visual,V:VisualNOS,w:WarningMsg,W:WildMenu,f:Folded,F:FoldColumn,A:DiffAdd,C:DiffChange,D:DiffDelete,T:DiffText,>:SignColumn,-:Conceal,B:SpellBad,P:SpellCap,R:SpellRare,L:SpellLocal,+:Pmenu,=:PmenuSel,x:PmenuSbar,X:PmenuThumb,*:TabLine,#:TabLineSel,_:TabLineFill,!:CursorColumn,.:CursorLine,o:ColorColumn
  include=^\s*#\s*include
  indentkeys=0{,0},:,0#,!^F,o,O,e
  isfname=@,48-57,/,.,-,_,+,,,#,$,%,~,=
  isident=@,48-57,_,192-255
  iskeyword=@,48-57,_,192-255
  lispwords=defun,define,defmacro,set!,lambda,if,case,let,flet,let*,letrec,do,do*,define-syntax,let-syntax,letrec-syntax,destructuring-bind,defpackage,defparameter,defstruct,deftype,defvar,do-all-symbols,do-external-symbols,do-symbols,dolist,dotimes,ecase,etypecase,eval-when,labels,macrolet,multiple-value-bind,multiple-value-call,multiple-value-prog1,multiple-value-setq,prog1,progv,typecase,unless,unwind-protect,when,with-input-from-string,with-open-file,with-open-stream,with-output-to-string,with-package-iterator,define-condition,handler-bind,handler-case,restart-bind,restart-case,with-simple-restart,store-value,use-value,muffle-warning,abort,continue,with-slots,with-slots*,with-accessors,with-accessors*,defclass,defmethod,print-unreadable-object
  listchars=tab:> ,trail:-,extends:>,precedes:<,nbsp:+
  matchpairs=(:),{:},[:]
  maxmempattern=1000
  mkspellmem=460000,2000,500
  mousemodel=popup_setpos
  paragraphs=IPLPPPQPP TPHPLIPpLpItpplpipbp
  path=.,/usr/include,,
  printexpr=system('lpr' . (&printdevice == '' ? '' : ' -P' . &printdevice) . ' ' . v:fname_in) . delete(v:fname_in) + v:shell_error
  printheader=%<%f%h%m%=Page %N
  rightleftcmd=search
  runtimepath=~/.vim,~/.vim/bundle/ctrlp.vim,~/.vim/bundle/editorconfig-vim,~/.vim/bundle/mustache,~/.vim/bundle/nerdtree,~/.vim/bundle/syntastic,~/.vim/bundle/vim-airline,~/.vim/bundle/vim-easymotion,~/.vim/bundle/vim-fugitive,~/.vim/bundle/vim-jade,~/.vim/bundle/vim-numbertoggle,~/.vim/bundle/vim-sensible,/usr/local/share/vim/vimfiles,/usr/local/share/vim/vim74,/usr/local/share/vim/vimfiles/after,~/.vim/after
  scrollopt=ver,jump
  sections=SHNHH HUnhsh
  selection=inclusive
  sessionoptions=blank,buffers,curdir,folds,help,tabpages,winsize
  shellpipe=2>&1| tee
  shellredir=>%s 2>&1
  shortmess=filnxtToO
  spellcapcheck=[.?!]\_[\])'"^I ]\+
  statusline=%!airline#statusline(2)
  suffixes=.bak,~,.o,.h,.info,.swp,.obj
  titleold=Thanks for flying Vim
  viewdir=~/.vim/view
  viewoptions=folds,options,cursor
  viminfo=!,'100,<50,s10,h
--- Terminal codes ---
  t_AB=^[[4%p1%dm     t_cl=^[[H^[[2J      t_DL=^[[%p1%dM      t_le=^H             t_op=^[[39;49m      t_ts=^[]2;          t_SI=
  t_AF=^[[3%p1%dm     t_Co=16             t_dl=^[[M           t_mb=^[[5m          t_RI=^[[%p1%dC      t_te=^[[?1049l      t_EI=
  t_AL=^[[%p1%dL      t_CS=               t_fs=^G             t_md=^[[1m          t_RV=^[[>c          t_ti=^[[?1049h      t_xs=
  t_al=^[[L           t_CV=               t_IE=^G             t_me=^[[m           t_u7=^[[6n          t_ue=^[[m           t_ZH=^[[7m
  t_bc=               t_ut=y              t_IS=^[]1;          t_mr=^[[7m          t_se=^[[27m         t_us=^[[4m          t_ZR=^[[m
  t_cd=^[[J           t_da=               t_ke=^[[?1l^[>      t_ms=y              t_so=^[[7m          t_vi=^[[?25l
  t_ce=^[[K           t_db=               t_ks=^[[?1h^[=      t_nd=^[[C           t_sr=^[M            t_vs=^[[?12;25h
  t_cm=^[[%i%p1%d;%p2%dH
  t_cs=^[[%i%p1%d;%p2%dr
  t_Sb=^[[4%?%p1%{1}%=%t4%e%p1%{3}%=%t6%e%p1%{4}%=%t1%e%p1%{6}%=%t3%e%p1%d%;m
  t_Sf=^[[3%?%p1%{1}%=%t4%e%p1%{3}%=%t6%e%p1%{4}%=%t1%e%p1%{6}%=%t3%e%p1%d%;m
  t_vb=^[[?5h$<100/>^[[?5l
  t_ve=^[[?12l^[[?25h
  t_WP=^[[3;%p1%d;%p2%dt
  t_WS=^[[8;%p1%d;%p2%dt
--- Terminal keys ---
t_#2 <S-Home>    ^[[1;2H   t_K6 <kPlus>     ^[O*k     t_k6 <F6>        ^[[17;*~  t_kd <Down>      ^[O*B          <zEnd>      ^[[8;*~
t_#4 <S-Left>    ^[[1;2D   t_K7 <kMinus>    ^[O*m     t_k7 <F7>        ^[[18;*~  t_kh <Home>      ^[[1;*H        <xHome>     ^[O*H
t_%1 <Help>      ^[[28;*~  t_K8 <kDivide>   ^[O*o     t_k8 <F8>        ^[[19;*~  t_kl <Left>      ^[O*D          <zHome>     ^[[7;*~
t_%i <S-Right>   ^[[1;2C   t_K9 <kMultiply> ^[O*j     t_k9 <F9>        ^[[20;*~  t_kr <Right>     ^[O*C          <xUp>       ^[[1;*A
t_&8 <Undo>      ^[[26;*~  t_KA <kEnter>    ^[O*M     t_k; <F10>       ^[[21;*~  t_ku <Up>        ^[O*A          <xDown>     ^[[1;*B
t_*7 <S-End>     ^[[1;2F   t_KB <kPoint>    ^[O*n     t_kB <S-Tab>     ^[[Z           <Mouse>     ^[[M           <xLeft>     ^[[1;*D
t_@7 <End>       ^[[1;*F   t_k1 <F1>        ^[[11;*~  t_kD <Del>       ^[[3~          <xF1>       ^[O*P          <xRight>    ^[[1;*C
t_F1 <F11>       ^[[23;*~  t_k2 <F2>        ^[[12;*~  t_kI <Insert>    ^[[2;*~        <xF2>       ^[O*Q          <kDel>      ^[[3;*~
t_F2 <F12>       ^[[24;*~  t_k3 <F3>        ^[[13;*~  t_kN <PageDown>  ^[[6;*~        <xF3>       ^[O*R
t_K1 <kHome>     ^[[1;*~   t_k4 <F4>        ^[[14;*~  t_kP <PageUp>    ^[[5;*~        <xF4>       ^[O*S
t_K4 <kEnd>      ^[[4;*~   t_k5 <F5>        ^[[15;*~  t_kb <BS>        ^?             <xEnd>      ^[O*F
--- Auto-Commands ---
fugitive_commit  BufDelete
    COMMIT_EDITMSG
              execute s:sub(s:FinishCommit(), '^echoerr (.*)', 'echohl ErrorMsg|echo \1|echohl NONE')
filetypedetect  BufEnter
    *.xpm     if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif
    *.xpm2    setf xpm2
BufEnter
    *         if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
NERDTree  BufEnter
    NERD_tree_*
              stopinsert
NERDTreeHijackNetrw  BufEnter
    *         call nerdtree#checkForBrowse(expand("<amatch>"))
syntastic  BufEnter
    *         call s:BufEnterHook()
BufEnter
    *.vba     setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.gz  setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.bz2 setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.zip setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.xz  setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vmb     setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vmb.gz  setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vmb.bz2 setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vmb.zip setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vmb.xz  setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
filetypedetect  BufNewFile
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-new
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-bak
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    *.inp     call s:Check_inp()
    *.aap     setf aap
    */etc/a2ps.cfg
              setf a2ps
    */etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    *.ino     setf arduino
    *.pde     setf arduino
    proftpd.conf*
              call s:StarSetf('apachestyle')
    .htaccess setf apache
    */etc/httpd/*.conf
              setf apache
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    .asoundrc setf alsaconf
    */usr/share/alsa/alsa.conf
              setf alsaconf
    */etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    apt.conf  setf aptconf
    */.aptitude/config
              setf aptconf
    */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf}
              setf aptconf
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asciidoc
              setf asciidoc
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    */boot/grub/menu.lst
              setf grub
    */boot/grub/grub.conf
              setf grub
    */etc/grub.conf
              setf grub
    *.asm     call s:FTasm()
    *.[sS]    call s:FTasm()
    *.[aA]    call s:FTasm()
    *.mac     call s:FTasm()
    *.lst     call s:FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call s:FTVB("basic")
    *.vb      setf vb
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call s:FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named.conf
              setf named
    rndc.conf setf named
    named.root
              setf bindzone
    *.db      call s:BindzoneCheck('')
    *.bl      setf blank
    */etc/blkid.tab
              setf xml
    */etc/blkid.tab.old
              setf xml
    *.c       call s:FTlpc()
    calendar  setf calendar
    *.cs      setf cs
    *.csdl    setf csdl
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    */etc/cdrdao.conf
              setf cdrdaoconf
    */etc/defaults/cdrdao
              setf cdrdaoconf
    */etc/default/cdrdao
              setf cdrdaoconf
    .cdrdao   setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.h       call s:FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call s:FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call s:FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    *.clj     setf clojure
    *.cljs    setf clojure
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    */.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    Dockerfile
              setf=dockerfile
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    *.eu      call s:EuphoriaCheck()
    *.ew      call s:EuphoriaCheck()
    *.ex      call s:EuphoriaCheck()
    *.exu     call s:EuphoriaCheck()
    *.exw     call s:EuphoriaCheck()
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    */etc/apt/sources.list
              setf debsources
    */etc/apt/sources.list.d/*.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    */etc/dnsmasq.conf
              setf dnsmasq
    *.desc    setf desc
    *.d       call s:DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   setf diff
    .dir_colors
              setf dircolors
    .dircolors
              setf dircolors
    */etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call s:BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.dts     setf dts
    *.dtsi    setf dts
    *.ed\(f\|if\|n\|o\)
              setf edif
    *.ecd     setf ecd
    *.e       call s:FTe()
    *.E       call s:FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fal     setf falcon
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.frt     setf reva
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    *.git/COMMIT_EDITMSG
              setf gitcommit
    *.git/MERGE_MSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    .gitmodules
              setf gitconfig
    *.git/modules/*/COMMIT_EDITMSG
              setf gitcommit
    *.git/modules/*/config
              setf gitconfig
    */.config/git/config
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/*   if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    */usr/*/gnupg/options.skel
              setf gpg
    gnashrc   setf gnash
    .gnashrc  setf gnash
    gnashpluginrc
              setf gnash
    .gnashpluginrc
              setf gnash
    gitolite.conf
              setf gitolite
    */gitolite-admin/conf/*
              call s:StarSetf('gitolite')
    {,.}gitolite.rc
              setf perl
    example.gitolite.rc
              setf perl
    *.gpi     setf gnuplot
    *.go      setf go
    *.gs      setf grads
    *.gretl   setf gretl
    *.groovy  setf groovy
    *.gsp     setf gsp
    */etc/group
              setf group
    */etc/group-
              setf group
    */etc/group.edit
              setf group
    */etc/gshadow
              setf group
    */etc/gshadow-
              setf group
    */etc/gshadow.edit
              setf group
    */var/backups/group.bak
              setf group
    */var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.rs      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.t.html  setf tilde
    *.html    call s:FThtml()
    *.htm     call s:FThtml()
    *.shtml   call s:FThtml()
    *.stm     call s:FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf htmlcheetah
    */etc/host.conf
              setf hostconf
    */etc/hosts.allow
              setf hostsaccess
    */etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.htt     setf httest
    *.htb     setf httest
    *.icn     setf icon
    *.idl     call s:FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call s:ProtoCheck('indent')
    *.pro     call s:ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    */etc/initng/*/*.i
              setf initng
    *.ii      setf initng
    upstream.dat\c
              setf upstreamdat
    upstream.*.dat\c
              setf upstreamdat
    *.upstream.dat\c
              setf upstreamdat
    upstream.log\c
              setf upstreamlog
    upstream.*.log\c
              setf upstreamlog
    *.upstream.log\c
              setf upstreamlog
    upstreaminstall.log\c
              setf upstreaminstalllog
    upstreaminstall.*.log\c
              setf upstreaminstalllog
    *.upstreaminstall.log\c
              setf upstreaminstalllog
    usserver.log\c
              setf usserverlog
    usserver.*.log\c
              setf usserverlog
    *.usserver.log\c
              setf usserverlog
    usw2kagt.log\c
              setf usw2kagtlog
    usw2kagt.*.log\c
              setf usw2kagtlog
    *.usw2kagt.log\c
              setf usw2kagtlog
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.ijs     setf j
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.jsx     setf javascript
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    *.clp     setf jess
    *.jgr     setf jgraph
    *.jov     setf jovial
    *.j73     setf jovial
    *.jovial  setf jovial
    *.json    setf json
    *.jsonp   setf json
    *.kix     setf kix
    *.k       setf kwt
    *.kv      setf kivy
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    */etc/limits
              setf limits
    */etc/*limits.conf
              setf limits
    */etc/*limits.d/*.conf
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.lex     setf lex
    *.l       setf lex
    *.lxx     setf lex
    *.l++     setf lex
    */etc/libao.conf
              setf libao
    */.libao  setf libao
    */etc/sensors.conf
              setf sensors
    */etc/sensors3.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf setf lilo
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.cl      setf lisp
    *.jl      setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    */etc/login.access
              setf loginaccess
    */etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\\\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    */etc/mail/aliases
              setf mailaliases
    */etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.page    setf mallard
    *.man     setf man
    */etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    *.mdwn    setf markdown
    README.md setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.comp    setf mason
    *.m       call s:FTm()
    *.nb      setf mma
    *.mel     setf mel
    hg-editor-*.txt
              setf hgcommit
    *.hgrc    setf cfg
    *hgrc     setf cfg
    */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*}
              setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mix     setf mix
    *.mixal   setf mix
    *.mms     call s:FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.md      setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    */etc/modules.conf
              setf modconf
    */etc/modules
              setf modconf
    */etc/conf.modules
              setf modconf
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    */etc/Muttrc.d/*
              call s:StarSetf('muttrc')
    *.rc      setf rc
    *.rch     setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    */etc/nanorc
              setf nanorc
    .nanorc   setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    .netrc    setf netrc
    *.ninja   setf ninja
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call s:FTnroff()
    *.mm      call s:FTmm()
    *.nqc     setf nqc
    *.nsi     setf nsis
    *.nsh     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    .ocamlinit
              setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    */etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    */etc/passwd
              setf passwd
    */etc/passwd-
              setf passwd
    */etc/passwd.edit
              setf passwd
    */etc/shadow
              setf passwd
    */etc/shadow-
              setf passwd
    */etc/shadow.edit
              setf passwd
    */var/backups/passwd.bak
              setf passwd
    */var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pl      call s:FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.lpc     setf pike
    *.ulpc    setf pike
    *.pmod    setf pike
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    *.pli     setf pli
    *.pl1     setf pli
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call s:FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call s:FTprogress_cweb()
    *.i       call s:FTprogress_asm()
    *.p       call s:FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    *.proto   setf proto
    */etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    *.ptl     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rex     setf rexx
    *.orx     setf rexx
    *.rxo     setf rexx
    *.rxj     setf rexx
    *.jrexx   setf rexx
    *.rexxj   setf rexx
    *.rexx    setf rexx
    *.testGroup
              setf rexx
    *.testUnit
              setf rexx
    *.s       setf r
    *.rd      setf rhelp
    *.rnw     setf rnoweb
    *.snw     setf rnoweb
    *.rmd     setf rmd
    *.smd     setf rmd
    *.rrst    setf rrst
    *.srst    setf rrst
    *.r       call s:FTr()
    *.R       call s:FTr()
    .reminders
              setf remind
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rng     setf rng
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gemspec setf ruby
    *.ru      setf ruby
    Gemfile   setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    sendmail.cf
              setf sm
    *.mc      call s:McSetf()
    */etc/services
              setf services
    */etc/slp.conf
              setf slpconf
    */etc/slp.reg
              setf slpreg
    */etc/slp.spi
              setf slpspi
    */etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call SetFileTypeSH("bash")
    bashrc    call SetFileTypeSH("bash")
    bash.bashrc
              call SetFileTypeSH("bash")
    .bash_profile*
              call SetFileTypeSH("bash")
    .bash_logout*
              call SetFileTypeSH("bash")
    *.bash    call SetFileTypeSH("bash")
    *.ebuild  call SetFileTypeSH("bash")
    .kshrc*   call SetFileTypeSH("ksh")
    *.ksh     call SetFileTypeSH("ksh")
    */etc/profile
              call SetFileTypeSH(getline(1))
    .profile* call SetFileTypeSH(getline(1))
    *.sh      call SetFileTypeSH(getline(1))
    *.env     call SetFileTypeSH(getline(1))
    .tcshrc*  call SetFileTypeShell("tcsh")
    *.tcsh    call SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call SetFileTypeShell("tcsh")
    tcsh.login
              call SetFileTypeShell("tcsh")
    .login*   call s:CSH()
    .cshrc*   call s:CSH()
    csh.cshrc call s:CSH()
    csh.login call s:CSH()
    csh.logout
              call s:CSH()
    *.csh     call s:CSH()
    .alias    call s:CSH()
    .zprofile setf zsh
    */etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    *.rkt     setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call s:FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call s:SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.class   setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    */etc/sysctl.conf
              setf sysctl
    */etc/sysctl.d/*.conf
              setf sysctl
    *.sdc     setf sdc
    */etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !s:FTnroff() && !s:FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call s:FTtex()
    tex/context/*/*.tex
              setf context
    *.mkii    setf context
    *.mkiv    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    *.tpp     setf tpp
    *.treetop setf treetop
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.twig    setf twig
    *.uit     setf uil
    *.uil     setf uil
    */etc/udev/udev.conf
              setf udevconf
    */etc/udev/permissions.d/*.permissions
              setf udevperm
    */etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    */etc/updatedb.conf
              setf updatedb
    */usr/share/upstart/*.conf
              setf upstart
    */usr/share/upstart/*.override
              setf upstart
    */etc/init/*.conf
              setf upstart
    */etc/init/*.override
              setf upstart
    */.init/*.conf
              setf upstart
    */.init/*.override
              setf upstart
    */.config/upstart/*.conf
              setf upstart
    */.config/upstart/*.override
              setf upstart
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.sv      setf systemverilog
    *.svh     setf systemverilog
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call s:FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.vroom   setf vroom
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
    */xorg.conf.d/*.conf
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    */etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !s:FTnroff() | setf xmath | endif
    *.xml     call s:FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ts      setf xml
    *.ui      setf xml
    *.tpm     setf xml
    */etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *.xul     setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.yxx     setf yacc
    *.y++     setf yacc
    *.y       call s:FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    */etc/yum.conf
              setf dosini
    *.zu      setf zimbu
    *.dtml    call s:FThtml()
    *.pt      call s:FThtml()
    *.cpt     call s:FThtml()
    *.zsql    call s:SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    */etc/apache2/*.conf*
              call s:StarSetf('apache')
    */etc/apache2/conf.*/*
              call s:StarSetf('apache')
    */etc/apache2/mods-*/*
              call s:StarSetf('apache')
    */etc/apache2/sites-*/*
              call s:StarSetf('apache')
    */etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    */etc/cron.d/*
              call s:StarSetf('crontab')
    */etc/dnsmasq.d/*
              call s:StarSetf('dnsmasq')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    */tmp/lltmp*
              call s:StarSetf('gedcom')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    Kconfig.* call s:StarSetf('kconfig')
    lilo.conf*
              call s:StarSetf('lilo')
    */etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    mutt[[:alnum:]._-]\\\{6\}
              setf mail
    */etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    */etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    tmac.*    call s:StarSetf('nroff')
    */etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *.rdf     call s:Redif()
    .reminders*
              call s:StarSetf('remind')
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    */etc/xinetd.d/*
              call s:StarSetf('xinetd')
    */etc/yum.repos.d/*
              call s:StarSetf('dosini')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *.txt     setf text
    *.text    setf text
    README    setf text
    *.mustache
              set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.handlebars
              set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hbs     set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hogan   set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hulk    set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hjs     set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.jade    set filetype=jade
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
editorconfig  BufNewFile
    *         call s:UseConfigFiles()
    .editorconfig
              set filetype=dosini
fugitive  BufNewFile
    *         call fugitive#detect(expand('<amatch>:p'))
fugitive_temp  BufNewFile
    *         if has_key(s:temp_files,tolower(expand('<afile>:p'))) |   let b:git_dir = s:temp_files[tolower(expand('<afile>:p'))].dir |   let b:git_type = 'temp' |   let b:git_args = s:temp_files[tolower(expand('<afile>:p'))].args |   call fugitive#detect(expand('<afile>:p')) |   setlocal bufhidden=delete |   nnoremap <buffer> <silent> q    :<C-U>bdelete<CR>| endif
BufNewFile
    *         :call UpdateMode()
filetypedetect  BufRead
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-new
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-bak
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    *.inp     call s:Check_inp()
    *.aap     setf aap
    */etc/a2ps.cfg
              setf a2ps
    */etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    *.ino     setf arduino
    *.pde     setf arduino
    proftpd.conf*
              call s:StarSetf('apachestyle')
    .htaccess setf apache
    */etc/httpd/*.conf
              setf apache
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    .asoundrc setf alsaconf
    */usr/share/alsa/alsa.conf
              setf alsaconf
    */etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    apt.conf  setf aptconf
    */.aptitude/config
              setf aptconf
    */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf}
              setf aptconf
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asciidoc
              setf asciidoc
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    */boot/grub/menu.lst
              setf grub
    */boot/grub/grub.conf
              setf grub
    */etc/grub.conf
              setf grub
    *.asm     call s:FTasm()
    *.[sS]    call s:FTasm()
    *.[aA]    call s:FTasm()
    *.mac     call s:FTasm()
    *.lst     call s:FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call s:FTVB("basic")
    *.vb      setf vb
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call s:FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named.conf
              setf named
    rndc.conf setf named
    named.root
              setf bindzone
    *.db      call s:BindzoneCheck('')
    *.bl      setf blank
    */etc/blkid.tab
              setf xml
    */etc/blkid.tab.old
              setf xml
    *.c       call s:FTlpc()
    calendar  setf calendar
    *.cs      setf cs
    *.csdl    setf csdl
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    */etc/cdrdao.conf
              setf cdrdaoconf
    */etc/defaults/cdrdao
              setf cdrdaoconf
    */etc/default/cdrdao
              setf cdrdaoconf
    .cdrdao   setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.h       call s:FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call s:FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call s:FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    *.clj     setf clojure
    *.cljs    setf clojure
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    */.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    Dockerfile
              setf=dockerfile
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    *.eu      call s:EuphoriaCheck()
    *.ew      call s:EuphoriaCheck()
    *.ex      call s:EuphoriaCheck()
    *.exu     call s:EuphoriaCheck()
    *.exw     call s:EuphoriaCheck()
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    */etc/apt/sources.list
              setf debsources
    */etc/apt/sources.list.d/*.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    */etc/dnsmasq.conf
              setf dnsmasq
    *.desc    setf desc
    *.d       call s:DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   setf diff
    .dir_colors
              setf dircolors
    .dircolors
              setf dircolors
    */etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call s:BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.dts     setf dts
    *.dtsi    setf dts
    *.ed\(f\|if\|n\|o\)
              setf edif
    *.ecd     setf ecd
    *.e       call s:FTe()
    *.E       call s:FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fal     setf falcon
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.frt     setf reva
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    *.git/COMMIT_EDITMSG
              setf gitcommit
    *.git/MERGE_MSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    .gitmodules
              setf gitconfig
    *.git/modules/*/COMMIT_EDITMSG
              setf gitcommit
    *.git/modules/*/config
              setf gitconfig
    */.config/git/config
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/*   if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    */usr/*/gnupg/options.skel
              setf gpg
    gnashrc   setf gnash
    .gnashrc  setf gnash
    gnashpluginrc
              setf gnash
    .gnashpluginrc
              setf gnash
    gitolite.conf
              setf gitolite
    */gitolite-admin/conf/*
              call s:StarSetf('gitolite')
    {,.}gitolite.rc
              setf perl
    example.gitolite.rc
              setf perl
    *.gpi     setf gnuplot
    *.go      setf go
    *.gs      setf grads
    *.gretl   setf gretl
    *.groovy  setf groovy
    *.gsp     setf gsp
    */etc/group
              setf group
    */etc/group-
              setf group
    */etc/group.edit
              setf group
    */etc/gshadow
              setf group
    */etc/gshadow-
              setf group
    */etc/gshadow.edit
              setf group
    */var/backups/group.bak
              setf group
    */var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.rs      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.t.html  setf tilde
    *.html    call s:FThtml()
    *.htm     call s:FThtml()
    *.shtml   call s:FThtml()
    *.stm     call s:FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf htmlcheetah
    */etc/host.conf
              setf hostconf
    */etc/hosts.allow
              setf hostsaccess
    */etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.htt     setf httest
    *.htb     setf httest
    *.icn     setf icon
    *.idl     call s:FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call s:ProtoCheck('indent')
    *.pro     call s:ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    */etc/initng/*/*.i
              setf initng
    *.ii      setf initng
    upstream.dat\c
              setf upstreamdat
    upstream.*.dat\c
              setf upstreamdat
    *.upstream.dat\c
              setf upstreamdat
    upstream.log\c
              setf upstreamlog
    upstream.*.log\c
              setf upstreamlog
    *.upstream.log\c
              setf upstreamlog
    upstreaminstall.log\c
              setf upstreaminstalllog
    upstreaminstall.*.log\c
              setf upstreaminstalllog
    *.upstreaminstall.log\c
              setf upstreaminstalllog
    usserver.log\c
              setf usserverlog
    usserver.*.log\c
              setf usserverlog
    *.usserver.log\c
              setf usserverlog
    usw2kagt.log\c
              setf usw2kagtlog
    usw2kagt.*.log\c
              setf usw2kagtlog
    *.usw2kagt.log\c
              setf usw2kagtlog
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.ijs     setf j
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.jsx     setf javascript
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    *.clp     setf jess
    *.jgr     setf jgraph
    *.jov     setf jovial
    *.j73     setf jovial
    *.jovial  setf jovial
    *.json    setf json
    *.jsonp   setf json
    *.kix     setf kix
    *.k       setf kwt
    *.kv      setf kivy
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    */etc/limits
              setf limits
    */etc/*limits.conf
              setf limits
    */etc/*limits.d/*.conf
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.lex     setf lex
    *.l       setf lex
    *.lxx     setf lex
    *.l++     setf lex
    */etc/libao.conf
              setf libao
    */.libao  setf libao
    */etc/sensors.conf
              setf sensors
    */etc/sensors3.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf setf lilo
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.cl      setf lisp
    *.jl      setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    */etc/login.access
              setf loginaccess
    */etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\\\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    */etc/mail/aliases
              setf mailaliases
    */etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.page    setf mallard
    *.man     setf man
    */etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    *.mdwn    setf markdown
    README.md setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.comp    setf mason
    *.m       call s:FTm()
    *.nb      setf mma
    *.mel     setf mel
    hg-editor-*.txt
              setf hgcommit
    *.hgrc    setf cfg
    *hgrc     setf cfg
    */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*}
              setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mix     setf mix
    *.mixal   setf mix
    *.mms     call s:FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.md      setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    */etc/modules.conf
              setf modconf
    */etc/modules
              setf modconf
    */etc/conf.modules
              setf modconf
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    */etc/Muttrc.d/*
              call s:StarSetf('muttrc')
    *.rc      setf rc
    *.rch     setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    */etc/nanorc
              setf nanorc
    .nanorc   setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    .netrc    setf netrc
    *.ninja   setf ninja
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call s:FTnroff()
    *.mm      call s:FTmm()
    *.nqc     setf nqc
    *.nsi     setf nsis
    *.nsh     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    .ocamlinit
              setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    */etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    */etc/passwd
              setf passwd
    */etc/passwd-
              setf passwd
    */etc/passwd.edit
              setf passwd
    */etc/shadow
              setf passwd
    */etc/shadow-
              setf passwd
    */etc/shadow.edit
              setf passwd
    */var/backups/passwd.bak
              setf passwd
    */var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pl      call s:FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.lpc     setf pike
    *.ulpc    setf pike
    *.pmod    setf pike
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    *.pli     setf pli
    *.pl1     setf pli
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call s:FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call s:FTprogress_cweb()
    *.i       call s:FTprogress_asm()
    *.p       call s:FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    *.proto   setf proto
    */etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    *.ptl     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rex     setf rexx
    *.orx     setf rexx
    *.rxo     setf rexx
    *.rxj     setf rexx
    *.jrexx   setf rexx
    *.rexxj   setf rexx
    *.rexx    setf rexx
    *.testGroup
              setf rexx
    *.testUnit
              setf rexx
    *.s       setf r
    *.rd      setf rhelp
    *.rnw     setf rnoweb
    *.snw     setf rnoweb
    *.rmd     setf rmd
    *.smd     setf rmd
    *.rrst    setf rrst
    *.srst    setf rrst
    *.r       call s:FTr()
    *.R       call s:FTr()
    .reminders
              setf remind
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rng     setf rng
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gemspec setf ruby
    *.ru      setf ruby
    Gemfile   setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    sendmail.cf
              setf sm
    *.mc      call s:McSetf()
    */etc/services
              setf services
    */etc/slp.conf
              setf slpconf
    */etc/slp.reg
              setf slpreg
    */etc/slp.spi
              setf slpspi
    */etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call SetFileTypeSH("bash")
    bashrc    call SetFileTypeSH("bash")
    bash.bashrc
              call SetFileTypeSH("bash")
    .bash_profile*
              call SetFileTypeSH("bash")
    .bash_logout*
              call SetFileTypeSH("bash")
    *.bash    call SetFileTypeSH("bash")
    *.ebuild  call SetFileTypeSH("bash")
    .kshrc*   call SetFileTypeSH("ksh")
    *.ksh     call SetFileTypeSH("ksh")
    */etc/profile
              call SetFileTypeSH(getline(1))
    .profile* call SetFileTypeSH(getline(1))
    *.sh      call SetFileTypeSH(getline(1))
    *.env     call SetFileTypeSH(getline(1))
    .tcshrc*  call SetFileTypeShell("tcsh")
    *.tcsh    call SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call SetFileTypeShell("tcsh")
    tcsh.login
              call SetFileTypeShell("tcsh")
    .login*   call s:CSH()
    .cshrc*   call s:CSH()
    csh.cshrc call s:CSH()
    csh.login call s:CSH()
    csh.logout
              call s:CSH()
    *.csh     call s:CSH()
    .alias    call s:CSH()
    .zprofile setf zsh
    */etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    *.rkt     setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call s:FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call s:SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.class   setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    */etc/sysctl.conf
              setf sysctl
    */etc/sysctl.d/*.conf
              setf sysctl
    *.sdc     setf sdc
    */etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !s:FTnroff() && !s:FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call s:FTtex()
    tex/context/*/*.tex
              setf context
    *.mkii    setf context
    *.mkiv    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    *.tpp     setf tpp
    *.treetop setf treetop
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.twig    setf twig
    *.uit     setf uil
    *.uil     setf uil
    */etc/udev/udev.conf
              setf udevconf
    */etc/udev/permissions.d/*.permissions
              setf udevperm
    */etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    */etc/updatedb.conf
              setf updatedb
    */usr/share/upstart/*.conf
              setf upstart
    */usr/share/upstart/*.override
              setf upstart
    */etc/init/*.conf
              setf upstart
    */etc/init/*.override
              setf upstart
    */.init/*.conf
              setf upstart
    */.init/*.override
              setf upstart
    */.config/upstart/*.conf
              setf upstart
    */.config/upstart/*.override
              setf upstart
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.sv      setf systemverilog
    *.svh     setf systemverilog
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call s:FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.vroom   setf vroom
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
    */xorg.conf.d/*.conf
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    */etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !s:FTnroff() | setf xmath | endif
    *.xml     call s:FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ts      setf xml
    *.ui      setf xml
    *.tpm     setf xml
    */etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *.xul     setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.yxx     setf yacc
    *.y++     setf yacc
    *.y       call s:FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    */etc/yum.conf
              setf dosini
    *.zu      setf zimbu
    *.dtml    call s:FThtml()
    *.pt      call s:FThtml()
    *.cpt     call s:FThtml()
    *.zsql    call s:SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    */etc/apache2/*.conf*
              call s:StarSetf('apache')
    */etc/apache2/conf.*/*
              call s:StarSetf('apache')
    */etc/apache2/mods-*/*
              call s:StarSetf('apache')
    */etc/apache2/sites-*/*
              call s:StarSetf('apache')
    */etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    */etc/cron.d/*
              call s:StarSetf('crontab')
    */etc/dnsmasq.d/*
              call s:StarSetf('dnsmasq')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    */tmp/lltmp*
              call s:StarSetf('gedcom')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    Kconfig.* call s:StarSetf('kconfig')
    lilo.conf*
              call s:StarSetf('lilo')
    */etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    mutt[[:alnum:]._-]\\\{6\}
              setf mail
    */etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    */etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    tmac.*    call s:StarSetf('nroff')
    */etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *.rdf     call s:Redif()
    .reminders*
              call s:StarSetf('remind')
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    */etc/xinetd.d/*
              call s:StarSetf('xinetd')
    */etc/yum.repos.d/*
              call s:StarSetf('dosini')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *.txt     setf text
    *.text    setf text
    README    setf text
    *.mustache
              set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.handlebars
              set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hbs     set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hogan   set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hulk    set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hjs     set filetype=html syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.jade    set filetype=jade
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
editorconfig  BufRead
    *         call s:UseConfigFiles()
    .editorconfig
              set filetype=dosini
syntastic  BufRead
    *         call s:BufReadPostHook()
fugitive  BufRead
    *         call fugitive#detect(expand('<amatch>:p'))
fugitive_blame  BufRead
    *.fugitiveblame
              setfiletype fugitiveblame
fugitive_temp  BufRead
    *         if has_key(s:temp_files,tolower(expand('<afile>:p'))) |   let b:git_dir = s:temp_files[tolower(expand('<afile>:p'))].dir |   let b:git_type = 'temp' |   let b:git_args = s:temp_files[tolower(expand('<afile>:p'))].args |   call fugitive#detect(expand('<afile>:p')) |   setlocal bufhidden=delete |   nnoremap <buffer> <silent> q    :<C-U>bdelete<CR>| endif
BufRead
    *         :call UpdateMode()
gzip  BufRead
    *.gz      call gzip#read("gzip -dn")
    *.bz2     call gzip#read("bzip2 -d")
    *.Z       call gzip#read("uncompress")
    *.lzma    call gzip#read("lzma -d")
    *.xz      call gzip#read("xz -d")
BufRead
    *         unlet! b:airline_file_in_root
gzip  BufReadPre
    *.gz      setlocal bin
    *.bz2     setlocal bin
    *.Z       setlocal bin
    *.lzma    setlocal bin
    *.xz      setlocal bin
fugitive_files  BufReadCmd
    index{,.lock}
              if fugitive#is_git_dir(expand('<amatch>:p:h')) |   exe s:BufReadIndex() | elseif filereadable(expand('<amatch>')) |   read <amatch> |   1delete | endif
    fugitive://**//[0-3]/**
              exe s:BufReadIndexFile()
    fugitive://**//[0-9a-f][0-9a-f]*
              exe s:BufReadObject()
Network  BufReadCmd
    file://*  call netrw#FileUrlRead(expand("<amatch>"))
    ftp://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    http://*  exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    https://* exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
tar  BufReadCmd
    tarfile::*
              call tar#Read(expand("<amatch>"), 1)
    tarfile::*/*
              call tar#Read(expand("<amatch>"), 1)
    *.tar.gz  call tar#Browse(expand("<amatch>"))
    *.tar     call tar#Browse(expand("<amatch>"))
    *.lrp     call tar#Browse(expand("<amatch>"))
    *.tar.bz2 call tar#Browse(expand("<amatch>"))
    *.tar.Z   call tar#Browse(expand("<amatch>"))
    *.tgz     call tar#Browse(expand("<amatch>"))
    *.tar.lzma
              call tar#Browse(expand("<amatch>"))
    *.tar.xz  call tar#Browse(expand("<amatch>"))
    *.txz     call tar#Browse(expand("<amatch>"))
zip  BufReadCmd
    zipfile:* call zip#Read(expand("<amatch>"), 1)
    zipfile:*/*
              call zip#Read(expand("<amatch>"), 1)
    *.zip     call zip#Browse(expand("<amatch>"))
    *.jar     call zip#Browse(expand("<amatch>"))
    *.xpi     call zip#Browse(expand("<amatch>"))
    *.ja      call zip#Browse(expand("<amatch>"))
    *.war     call zip#Browse(expand("<amatch>"))
    *.ear     call zip#Browse(expand("<amatch>"))
    *.celzip  call zip#Browse(expand("<amatch>"))
    *.oxt     call zip#Browse(expand("<amatch>"))
    *.kmz     call zip#Browse(expand("<amatch>"))
    *.wsz     call zip#Browse(expand("<amatch>"))
    *.xap     call zip#Browse(expand("<amatch>"))
    *.docx    call zip#Browse(expand("<amatch>"))
    *.docm    call zip#Browse(expand("<amatch>"))
    *.dotx    call zip#Browse(expand("<amatch>"))
    *.dotm    call zip#Browse(expand("<amatch>"))
    *.potx    call zip#Browse(expand("<amatch>"))
    *.potm    call zip#Browse(expand("<amatch>"))
    *.ppsx    call zip#Browse(expand("<amatch>"))
    *.ppsm    call zip#Browse(expand("<amatch>"))
    *.pptx    call zip#Browse(expand("<amatch>"))
    *.pptm    call zip#Browse(expand("<amatch>"))
    *.ppam    call zip#Browse(expand("<amatch>"))
    *.sldx    call zip#Browse(expand("<amatch>"))
    *.thmx    call zip#Browse(expand("<amatch>"))
    *.xlam    call zip#Browse(expand("<amatch>"))
    *.xlsx    call zip#Browse(expand("<amatch>"))
    *.xlsm    call zip#Browse(expand("<amatch>"))
    *.xlsb    call zip#Browse(expand("<amatch>"))
    *.xltx    call zip#Browse(expand("<amatch>"))
    *.xltm    call zip#Browse(expand("<amatch>"))
    *.xlam    call zip#Browse(expand("<amatch>"))
    *.crtx    call zip#Browse(expand("<amatch>"))
    *.vdw     call zip#Browse(expand("<amatch>"))
    *.glox    call zip#Browse(expand("<amatch>"))
    *.gcsx    call zip#Browse(expand("<amatch>"))
    *.gqsx    call zip#Browse(expand("<amatch>"))
airline  BufUnload
    *         call <sid>on_window_changed()
syntastic  BufWinEnter
    *         call s:BufWinEnterHook()
airline  BufWinEnter
    *         call <sid>on_window_changed()
fugitive_diff  BufWinEnter
    *         if s:can_diffoff(+expand('<abuf>')) && s:diff_window_count() == 1 |   call s:diffoff() | endif
NERDTree  BufWinLeave
    NERD_tree_*
              call nerdtree#saveScreenState()
fugitive  BufWinLeave
    *         execute getwinvar(+bufwinnr(+expand('<abuf>')), 'fugitive_leave')
fugitive_diff  BufWinLeave
    *         if s:can_diffoff(+expand('<abuf>')) && s:diff_window_count() == 2 |   call s:diffoff_all(getbufvar(+expand('<abuf>'), 'git_dir')) | endif
syntastic  BufWritePost
    *         call s:BufWritePostHook()
airline  BufWritePost
    */autoload/airline/themes/*.vim
              exec 'source '.split(globpath(&rtp, 'autoload/airline/themes/'.g:airline_theme.'.vim', 1), "\n")[0] | call airline#load_theme()
gzip  BufWritePost
    *.gz      call gzip#write("gzip")
    *.bz2     call gzip#write("bzip2")
    *.Z       call gzip#write("compress -f")
    *.lzma    call gzip#write("lzma -z")
    *.xz      call gzip#write("xz -z")
airline_whitespace  BufWritePost
    *         unlet! b:airline_whitespace_check
fugitive_files  BufWriteCmd
    fugitive://**//[0-3]/**
              exe s:BufWriteIndexFile()
Network  BufWriteCmd
    ftp://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    http://*  exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
tar  BufWriteCmd
    tarfile::*
              call tar#Write(expand("<amatch>"))
    tarfile::*/*
              call tar#Write(expand("<amatch>"))
zip  BufWriteCmd
    zipfile:* call zip#Write(expand("<amatch>"))
    zipfile:*/*
              call zip#Write(expand("<amatch>"))
airline  CmdwinEnter
    *         call airline#add_statusline_func('airline#cmdwinenter') | call <sid>on_window_changed()
fugitive  CmdwinEnter
    *         call fugitive#detect(expand('#:p'))
airline  CmdwinLeave
    *         call airline#remove_statusline_func('airline#cmdwinenter')
CmdwinLeave
    *         unlet! b:airline_head
airline  ColorScheme
    *         call <sid>on_colorscheme_changed()
fugitive_blame  ColorScheme
    *         call s:RehighlightBlame()
EasyMotionInitHL  ColorScheme
    *         call EasyMotion#highlight#init()
gzip  FileAppendPost
    *.gz      call gzip#write("gzip")
    *.bz2     call gzip#write("bzip2")
    *.Z       call gzip#write("compress -f")
    *.lzma    call gzip#write("lzma -z")
    *.xz      call gzip#write("xz -z")
gzip  FileAppendPre
    *.gz      call gzip#appre("gzip -dn")
    *.bz2     call gzip#appre("bzip2 -d")
    *.Z       call gzip#appre("uncompress")
    *.lzma    call gzip#appre("lzma -d")
    *.xz      call gzip#appre("xz -d")
FileReadPost
    *         :call UpdateMode()
gzip  FileReadPost
    *.gz      call gzip#read("gzip -dn")
    *.bz2     call gzip#read("bzip2 -d")
    *.Z       call gzip#read("uncompress")
    *.lzma    call gzip#read("lzma -d")
    *.xz      call gzip#read("xz -d")
gzip  FileReadPre
    *.gz      setlocal bin
    *.bz2     setlocal bin
    *.Z       setlocal bin
    *.lzma    setlocal bin
    *.xz      setlocal bin
fugitive_files  FileReadCmd
    fugitive://**//[0-3]/**
              exe s:FileRead()
    fugitive://**//[0-9a-f][0-9a-f]*
              exe s:FileRead()
Network  FileReadCmd
    ftp://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    http://*  exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    https://* exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
tar  FileReadCmd
    tarfile::*
              call tar#Read(expand("<amatch>"), 0)
    tarfile::*/*
              call tar#Read(expand("<amatch>"), 0)
zip  FileReadCmd
    zipfile:* call zip#Read(expand("<amatch>"), 0)
    zipfile:*/*
              call zip#Read(expand("<amatch>"), 0)
filetypeplugin  FileType
    *         call s:LoadFTPlugin()
filetypeindent  FileType
    *         call s:LoadIndent()
syntaxset  FileType
    *         exe "set syntax=" . expand("<amatch>")
airline  FileType
    *         call <sid>on_window_changed()
fugitive  FileType
    netrw     call fugitive#detect(expand('%:p'))
fugitive_blame  FileType
    fugitiveblame
              setlocal nomodeline | if exists('b:git_dir') | let &l:keywordprg = s:repo().keywordprg() | endif
fugitive_files  FileType
    git       if exists('b:git_dir') |  call s:JumpInit() | endif
gzip  FileWritePost
    *.gz      call gzip#write("gzip")
    *.bz2     call gzip#write("bzip2")
    *.Z       call gzip#write("compress -f")
    *.lzma    call gzip#write("lzma -z")
    *.xz      call gzip#write("xz -z")
Network  FileWriteCmd
    ftp://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    http://*  exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
tar  FileWriteCmd
    tarfile::*
              call tar#Write(expand("<amatch>"))
    tarfile::*/*
              call tar#Write(expand("<amatch>"))
zip  FileWriteCmd
    zipfile:* call zip#Write(expand("<amatch>"))
    zipfile:*/*
              call zip#Write(expand("<amatch>"))
FilterReadPost
    *         :call UpdateMode()
fugitive_status  FocusGained
    *         call fugitive#reload_status()
FocusGained
    *         :call FocusGained()
FocusLost
    *         :call FocusLost()
fugitive_blame  GUIEnter
    *         call s:RehighlightBlame()
InsertEnter
    *         :call InsertEnter()
InsertLeave
    *         :call InsertLeave()
syntastic  QuitPre
    *         call s:QuitPreHook()
filetypedetect  StdinReadPost
    *         if !did_filetype() | runtime! scripts.vim | endif
              if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
StdinReadPre
    *         let s:std_in=1
Syntax
    *         call s:SynSet()
    c         if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cpp       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cs        if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    idl       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    php       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
fugitive_blame  Syntax
    fugitiveblame
              call s:BlameSyntax()
fugitive_utility  User
    Fugitive  call s:define_commands()
fugitive  User
    NERDTreeInit
              call fugitive#detect(b:NERDTreeRoot.path.str())
    NERDTreeNewRoot
              call fugitive#detect(b:NERDTreeRoot.path.str())
fugitive_remove  User
    Fugitive  if s:buffer().commit() =~# '^0\=$' | exe "command! -buffer -bar -bang -nargs=1 -complete=customlist,s:MoveComplete Gmove :execute s:Move(<bang>0,<q-args>)" | exe "command! -buffer -bar -bang Gremove :execute s:Remove(<bang>0)" | endif
fugitive_blame  User
    Fugitive  if s:buffer().type('file', 'blob') | exe "command! -buffer -bar -bang -range=0 -nargs=* Gblame :execute s:Blame(<bang>0,<line1>,<line2>,<count>,[<f-args>])" | endif
fugitive_foldtext  User
    Fugitive  if &filetype =~# '^git\%(commit\)\=$' && &foldtext ==# 'foldtext()' |    set foldtext=fugitive#foldtext() | endif
VimEnter
    *         NERDTree
              if argc() == 0 && !exists("s:std_in") | NERDTree | endif
NERDTreeHijackNetrw  VimEnter
    *         silent! autocmd! FileExplorer
              call nerdtree#checkForBrowse(expand("<amatch>"))
airline  VimEnter
    *         call <sid>on_window_changed()
fugitive  VimEnter
    *         if expand('<amatch>')==''|call fugitive#detect(getcwd())|endif
fugitive_commit  VimLeavePre
    COMMIT_EDITMSG
              execute s:sub(s:FinishCommit(), '^echoerr (.*)', 'echohl ErrorMsg|echo \1|echohl NONE')
airline  VimResized
    *         call <sid>on_window_changed()
airline  WinEnter
    *         call <sid>on_window_changed()
WinEnter
    *         :call FocusGained()
              :call FocusGained()
matchparen  WinEnter
    *         call s:Highlight_Matching_Pair()
WinLeave
    *         :call FocusLost()
              :call FocusLost()
CursorHold
    *         unlet! b:airline_head
airline_whitespace  CursorHold
    *         unlet! b:airline_whitespace_check
Network  SourceCmd
    ftp://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    rcp://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    scp://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    http://*  exe 'Nsource '.fnameescape(expand("<amatch>"))
    https://* exe 'Nsource '.fnameescape(expand("<amatch>"))
    dav://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    davs://*  exe 'Nsource '.fnameescape(expand("<amatch>"))
    rsync://* exe 'Nsource '.fnameescape(expand("<amatch>"))
    sftp://*  exe 'Nsource '.fnameescape(expand("<amatch>"))
SourceCmd
    *.vba.gz  if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vba.bz2 if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vba.zip if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vba.xz  if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vba     if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|call vimball#Vimball(1)|close|else|call vimball#Vimball(1)|endif
    *.vmb.gz  if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vmb.bz2 if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vmb.zip if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vmb.xz  if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vmb     if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|call vimball#Vimball(1)|close|else|call vimball#Vimball(1)|endif
SpellFileMissing
    *         call spellfile#LoadFile(expand('<amatch>'))
matchparen  CursorMoved
    *         call s:Highlight_Matching_Pair()
CursorMoved
    *         call <sid>sync_active_winnr()
matchparen  CursorMovedI
    *         call s:Highlight_Matching_Pair()
fugitive_status  ShellCmdPost
    *         call fugitive#reload_status()
ShellCmdPost
    *         unlet! b:airline_head
matchparen  TextChanged
    *         call s:Highlight_Matching_Pair()
matchparen  TextChangedI
    *         call s:Highlight_Matching_Pair()
--- Normal/Visual mode mappings ---
   <C-E>         :NERDTreeToggle<CR>
n  <C-L>       * :nohlsearch<CR><C-L>
n  <C-N>       * :call NumberToggle()<CR>
o  %           * v:<C-U>call <SNR>43_Match_wrapper('',1,'o') <CR>
v  %           * :<C-U>call <SNR>43_Match_wrapper('',1,'v') <CR>m'gv``
n  %           * :<C-U>call <SNR>43_Match_wrapper('',1,'n') <CR>
   .push(        i );
o  /             <Plug>(easymotion-tn)
nv /             <Plug>(easymotion-sn)
   :             function( elems, callback, arg ) {
   N             <Plug>(easymotion-prev)
o  [%          * v:<C-U>call <SNR>43_MultiMatch("bW", "o") <CR>
v  [%            <Esc>[%m'gv``
n  [%          * :<C-U>call <SNR>43_MultiMatch("bW", "n") <CR>
   \h            <Plug>(easymotion-linebackward)
   \k            <Plug>(easymotion-k)
   \j            <Plug>(easymotion-j)
   \l            <Plug>(easymotion-lineforward)
   \             <Plug>(easymotion-prefix)
   \\            <Plug>(easymotion-prefix)
o  ]%          * v:<C-U>call <SNR>43_MultiMatch("W",  "o") <CR>
v  ]%            <Esc>]%m'gv``
n  ]%          * :<C-U>call <SNR>43_MultiMatch("W",  "n") <CR>
v  a%            <Esc>[%v]%
n  gx            <Plug>NetrwBrowseX
o  g%          * v:<C-U>call <SNR>43_Match_wrapper('',0,'o') <CR>
v  g%          * :<C-U>call <SNR>43_Match_wrapper('',0,'v') <CR>m'gv``
n  g%          * :<C-U>call <SNR>43_Match_wrapper('',0,'n') <CR>
   n             <Plug>(easymotion-next)
n  s             <Plug>(easymotion-s2)
o  t             <Plug>(easymotion-bd-tl)
n  t             <Plug>(easymotion-t2)
n  <Plug>NetrwBrowseX * :call netrw#NetrwBrowseX(expand("<cfile>"),0)<CR>
   <Plug>(easymotion-prefix)N   <Plug>(easymotion-N)
   <Plug>(easymotion-prefix)n   <Plug>(easymotion-n)
   <Plug>(easymotion-prefix)k   <Plug>(easymotion-k)
   <Plug>(easymotion-prefix)j   <Plug>(easymotion-j)
   <Plug>(easymotion-prefix)gE   <Plug>(easymotion-gE)
   <Plug>(easymotion-prefix)ge   <Plug>(easymotion-ge)
   <Plug>(easymotion-prefix)E   <Plug>(easymotion-E)
   <Plug>(easymotion-prefix)e   <Plug>(easymotion-e)
   <Plug>(easymotion-prefix)B   <Plug>(easymotion-B)
   <Plug>(easymotion-prefix)b   <Plug>(easymotion-b)
   <Plug>(easymotion-prefix)W   <Plug>(easymotion-W)
   <Plug>(easymotion-prefix)w   <Plug>(easymotion-w)
   <Plug>(easymotion-prefix)T   <Plug>(easymotion-T)
   <Plug>(easymotion-prefix)t   <Plug>(easymotion-t)
   <Plug>(easymotion-prefix)s   <Plug>(easymotion-s)
   <Plug>(easymotion-prefix)F   <Plug>(easymotion-F)
   <Plug>(easymotion-prefix)f   <Plug>(easymotion-f)
x  <Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(1)<CR>
nos<Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(0)<CR>
x  <Plug>(easymotion-lineanywhere) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,2)<CR>
nos<Plug>(easymotion-lineanywhere) * :<C-U>call EasyMotion#LineAnywhere(0,2)<CR>
x  <Plug>(easymotion-linebackward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,1)<CR>
nos<Plug>(easymotion-linebackward) * :<C-U>call EasyMotion#LineAnywhere(0,1)<CR>
x  <Plug>(easymotion-lineforward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,0)<CR>
nos<Plug>(easymotion-lineforward) * :<C-U>call EasyMotion#LineAnywhere(0,0)<CR>
x  <Plug>(easymotion-bd-el) * <Esc>:<C-U>call EasyMotion#EL(1,2)<CR>
nos<Plug>(easymotion-bd-el) * :<C-U>call EasyMotion#EL(0,2)<CR>
x  <Plug>(easymotion-gel) * <Esc>:<C-U>call EasyMotion#EL(1,1)<CR>
nos<Plug>(easymotion-gel) * :<C-U>call EasyMotion#EL(0,1)<CR>
x  <Plug>(easymotion-el) * <Esc>:<C-U>call EasyMotion#EL(1,0)<CR>
nos<Plug>(easymotion-el) * :<C-U>call EasyMotion#EL(0,0)<CR>
x  <Plug>(easymotion-bd-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,2)<CR>
nos<Plug>(easymotion-bd-wl) * :<C-U>call EasyMotion#WBL(0,2)<CR>
x  <Plug>(easymotion-bl) * <Esc>:<C-U>call EasyMotion#WBL(1,1)<CR>
nos<Plug>(easymotion-bl) * :<C-U>call EasyMotion#WBL(0,1)<CR>
x  <Plug>(easymotion-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,0)<CR>
nos<Plug>(easymotion-wl) * :<C-U>call EasyMotion#WBL(0,0)<CR>
x  <Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(1,1)<CR>
nos<Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(0,1)<CR>
x  <Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(1,0)<CR>
nos<Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(0,0)<CR>
x  <Plug>(easymotion-dotrepeat) * <Esc>:<C-U>call EasyMotion#DotRepeat(1)<CR>
nos<Plug>(easymotion-dotrepeat) * :<C-U>call EasyMotion#DotRepeat(0)<CR>
x  <Plug>(easymotion-repeat) * <Esc>:<C-U>call EasyMotion#Repeat(1)<CR>
nos<Plug>(easymotion-repeat) * :<C-U>call EasyMotion#Repeat(0)<CR>
x  <Plug>(easymotion-jumptoanywhere) * <Esc>:<C-U>call EasyMotion#JumpToAnywhere(1,2)<CR>
nos<Plug>(easymotion-jumptoanywhere) * :<C-U>call EasyMotion#JumpToAnywhere(0,2)<CR>
x  <Plug>(easymotion-bd-n) * <Esc>:<C-U>call EasyMotion#Search(1,2)<CR>
nos<Plug>(easymotion-bd-n) * :<C-U>call EasyMotion#Search(0,2)<CR>
x  <Plug>(easymotion-N) * <Esc>:<C-U>call EasyMotion#Search(1,1)<CR>
nos<Plug>(easymotion-N) * :<C-U>call EasyMotion#Search(0,1)<CR>
x  <Plug>(easymotion-n) * <Esc>:<C-U>call EasyMotion#Search(1,0)<CR>
nos<Plug>(easymotion-n) * :<C-U>call EasyMotion#Search(0,0)<CR>
x  <Plug>(easymotion-eol-bd-jk) * <Esc>:<C-U>call EasyMotion#Eol(1,2)<CR>
nos<Plug>(easymotion-eol-bd-jk) * :<C-U>call EasyMotion#Eol(0,2)<CR>
x  <Plug>(easymotion-eol-k) * <Esc>:<C-U>call EasyMotion#Eol(1,1)<CR>
nos<Plug>(easymotion-eol-k) * :<C-U>call EasyMotion#Eol(0,1)<CR>
x  <Plug>(easymotion-eol-j) * <Esc>:<C-U>call EasyMotion#Eol(1,0)<CR>
nos<Plug>(easymotion-eol-j) * :<C-U>call EasyMotion#Eol(0,0)<CR>
x  <Plug>(easymotion-sol-bd-jk) * <Esc>:<C-U>call EasyMotion#Sol(1,2)<CR>
nos<Plug>(easymotion-sol-bd-jk) * :<C-U>call EasyMotion#Sol(0,2)<CR>
x  <Plug>(easymotion-sol-k) * <Esc>:<C-U>call EasyMotion#Sol(1,1)<CR>
nos<Plug>(easymotion-sol-k) * :<C-U>call EasyMotion#Sol(0,1)<CR>
x  <Plug>(easymotion-sol-j) * <Esc>:<C-U>call EasyMotion#Sol(1,0)<CR>
nos<Plug>(easymotion-sol-j) * :<C-U>call EasyMotion#Sol(0,0)<CR>
x  <Plug>(easymotion-bd-jk) * <Esc>:<C-U>call EasyMotion#JK(1,2)<CR>
nos<Plug>(easymotion-bd-jk) * :<C-U>call EasyMotion#JK(0,2)<CR>
x  <Plug>(easymotion-k) * <Esc>:<C-U>call EasyMotion#JK(1,1)<CR>
nos<Plug>(easymotion-k) * :<C-U>call EasyMotion#JK(0,1)<CR>
x  <Plug>(easymotion-j) * <Esc>:<C-U>call EasyMotion#JK(1,0)<CR>
nos<Plug>(easymotion-j) * :<C-U>call EasyMotion#JK(0,0)<CR>
x  <Plug>(easymotion-iskeyword-bd-e) * <Esc>:<C-U>call EasyMotion#EK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-e) * :<C-U>call EasyMotion#EK(0,2)<CR>
x  <Plug>(easymotion-iskeyword-ge) * <Esc>:<C-U>call EasyMotion#EK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-ge) * :<C-U>call EasyMotion#EK(0,1)<CR>
x  <Plug>(easymotion-iskeyword-e) * <Esc>:<C-U>call EasyMotion#EK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-e) * :<C-U>call EasyMotion#EK(0,0)<CR>
x  <Plug>(easymotion-bd-E) * <Esc>:<C-U>call EasyMotion#EW(1,2)<CR>
nos<Plug>(easymotion-bd-E) * :<C-U>call EasyMotion#EW(0,2)<CR>
x  <Plug>(easymotion-gE) * <Esc>:<C-U>call EasyMotion#EW(1,1)<CR>
nos<Plug>(easymotion-gE) * :<C-U>call EasyMotion#EW(0,1)<CR>
x  <Plug>(easymotion-E) * <Esc>:<C-U>call EasyMotion#EW(1,0)<CR>
nos<Plug>(easymotion-E) * :<C-U>call EasyMotion#EW(0,0)<CR>
x  <Plug>(easymotion-bd-e) * <Esc>:<C-U>call EasyMotion#E(1,2)<CR>
nos<Plug>(easymotion-bd-e) * :<C-U>call EasyMotion#E(0,2)<CR>
x  <Plug>(easymotion-ge) * <Esc>:<C-U>call EasyMotion#E(1,1)<CR>
nos<Plug>(easymotion-ge) * :<C-U>call EasyMotion#E(0,1)<CR>
x  <Plug>(easymotion-e) * <Esc>:<C-U>call EasyMotion#E(1,0)<CR>
nos<Plug>(easymotion-e) * :<C-U>call EasyMotion#E(0,0)<CR>
x  <Plug>(easymotion-iskeyword-bd-w) * <Esc>:<C-U>call EasyMotion#WBK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-w) * :<C-U>call EasyMotion#WBK(0,2)<CR>
x  <Plug>(easymotion-iskeyword-b) * <Esc>:<C-U>call EasyMotion#WBK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-b) * :<C-U>call EasyMotion#WBK(0,1)<CR>
x  <Plug>(easymotion-iskeyword-w) * <Esc>:<C-U>call EasyMotion#WBK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-w) * :<C-U>call EasyMotion#WBK(0,0)<CR>
x  <Plug>(easymotion-bd-W) * <Esc>:<C-U>call EasyMotion#WBW(1,2)<CR>
nos<Plug>(easymotion-bd-W) * :<C-U>call EasyMotion#WBW(0,2)<CR>
x  <Plug>(easymotion-B) * <Esc>:<C-U>call EasyMotion#WBW(1,1)<CR>
nos<Plug>(easymotion-B) * :<C-U>call EasyMotion#WBW(0,1)<CR>
x  <Plug>(easymotion-W) * <Esc>:<C-U>call EasyMotion#WBW(1,0)<CR>
nos<Plug>(easymotion-W) * :<C-U>call EasyMotion#WBW(0,0)<CR>
x  <Plug>(easymotion-bd-w) * <Esc>:<C-U>call EasyMotion#WB(1,2)<CR>
nos<Plug>(easymotion-bd-w) * :<C-U>call EasyMotion#WB(0,2)<CR>
x  <Plug>(easymotion-b) * <Esc>:<C-U>call EasyMotion#WB(1,1)<CR>
nos<Plug>(easymotion-b) * :<C-U>call EasyMotion#WB(0,1)<CR>
x  <Plug>(easymotion-w) * <Esc>:<C-U>call EasyMotion#WB(1,0)<CR>
nos<Plug>(easymotion-w) * :<C-U>call EasyMotion#WB(0,0)<CR>
x  <Plug>(easymotion-Tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,1)<CR>
nos<Plug>(easymotion-Tln) * :<C-U>call EasyMotion#TL(-1,0,1)<CR>
x  <Plug>(easymotion-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,0)<CR>
nos<Plug>(easymotion-t2) * :<C-U>call EasyMotion#T(2,0,0)<CR>
x  <Plug>(easymotion-t) * <Esc>:<C-U>call EasyMotion#T(1,1,0)<CR>
nos<Plug>(easymotion-t) * :<C-U>call EasyMotion#T(1,0,0)<CR>
x  <Plug>(easymotion-s) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-s) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,0)<CR>
nos<Plug>(easymotion-tn) * :<C-U>call EasyMotion#T(-1,0,0)<CR>
x  <Plug>(easymotion-bd-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,2)<CR>
nos<Plug>(easymotion-bd-t2) * :<C-U>call EasyMotion#T(2,0,2)<CR>
x  <Plug>(easymotion-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,0)<CR>
nos<Plug>(easymotion-tl) * :<C-U>call EasyMotion#TL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tn) * :<C-U>call EasyMotion#T(-1,0,2)<CR>
x  <Plug>(easymotion-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,0)<CR>
nos<Plug>(easymotion-fn) * :<C-U>call EasyMotion#S(-1,0,0)<CR>
x  <Plug>(easymotion-bd-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,2)<CR>
nos<Plug>(easymotion-bd-tl) * :<C-U>call EasyMotion#TL(1,0,2)<CR>
x  <Plug>(easymotion-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,0)<CR>
nos<Plug>(easymotion-fl) * :<C-U>call EasyMotion#SL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,2)<CR>
nos<Plug>(easymotion-bd-tl2) * :<C-U>call EasyMotion#TL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-f) * <Esc>:<C-U>call EasyMotion#S(1,1,0)<CR>
nos<Plug>(easymotion-f) * :<C-U>call EasyMotion#S(1,0,0)<CR>
x  <Plug>(easymotion-bd-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-bd-fl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,1)<CR>
nos<Plug>(easymotion-Fl2) * :<C-U>call EasyMotion#SL(2,0,1)<CR>
x  <Plug>(easymotion-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,0)<CR>
nos<Plug>(easymotion-tl2) * :<C-U>call EasyMotion#TL(2,0,0)<CR>
x  <Plug>(easymotion-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,0)<CR>
nos<Plug>(easymotion-f2) * :<C-U>call EasyMotion#S(2,0,0)<CR>
x  <Plug>(easymotion-Fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,1)<CR>
nos<Plug>(easymotion-Fln) * :<C-U>call EasyMotion#SL(-1,0,1)<CR>
x  <Plug>(easymotion-sln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-sln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,0)<CR>
nos<Plug>(easymotion-tln) * :<C-U>call EasyMotion#TL(-1,0,0)<CR>
x  <Plug>(easymotion-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,0)<CR>
nos<Plug>(easymotion-fl2) * :<C-U>call EasyMotion#SL(2,0,0)<CR>
x  <Plug>(easymotion-bd-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-bd-fl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-T2) * <Esc>:<C-U>call EasyMotion#T(2,1,1)<CR>
nos<Plug>(easymotion-T2) * :<C-U>call EasyMotion#T(2,0,1)<CR>
x  <Plug>(easymotion-bd-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tln) * :<C-U>call EasyMotion#TL(-1,0,2)<CR>
x  <Plug>(easymotion-T) * <Esc>:<C-U>call EasyMotion#T(1,1,1)<CR>
nos<Plug>(easymotion-T) * :<C-U>call EasyMotion#T(1,0,1)<CR>
x  <Plug>(easymotion-bd-t) * <Esc>:<C-U>call EasyMotion#T(1,1,2)<CR>
nos<Plug>(easymotion-bd-t) * :<C-U>call EasyMotion#T(1,0,2)<CR>
x  <Plug>(easymotion-Tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,1)<CR>
nos<Plug>(easymotion-Tn) * :<C-U>call EasyMotion#T(-1,0,1)<CR>
x  <Plug>(easymotion-s2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-s2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,1)<CR>
nos<Plug>(easymotion-Tl) * :<C-U>call EasyMotion#TL(1,0,1)<CR>
x  <Plug>(easymotion-sn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-sn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-Fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,1)<CR>
nos<Plug>(easymotion-Fn) * :<C-U>call EasyMotion#S(-1,0,1)<CR>
x  <Plug>(easymotion-sl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-sl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,1)<CR>
nos<Plug>(easymotion-Fl) * :<C-U>call EasyMotion#SL(1,0,1)<CR>
x  <Plug>(easymotion-sl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-sl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-F) * <Esc>:<C-U>call EasyMotion#S(1,1,1)<CR>
nos<Plug>(easymotion-F) * :<C-U>call EasyMotion#S(1,0,1)<CR>
x  <Plug>(easymotion-bd-f) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-bd-f) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-F2) * <Esc>:<C-U>call EasyMotion#S(2,1,1)<CR>
nos<Plug>(easymotion-F2) * :<C-U>call EasyMotion#S(2,0,1)<CR>
x  <Plug>(easymotion-bd-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-bd-f2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,1)<CR>
nos<Plug>(easymotion-Tl2) * :<C-U>call EasyMotion#TL(2,0,1)<CR>
x  <Plug>(easymotion-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,0)<CR>
nos<Plug>(easymotion-fln) * :<C-U>call EasyMotion#SL(-1,0,0)<CR>
v  <BS>          "-d
v  <D-x>         "*d
v  <D-c>         "*y
v  <D-v>         "-d"*P
n  <D-v>         "*P
--- Insert/Command-line mode mappings ---
!  <D-v>         <C-R>*
i  <C-U>       * <C-G>u<C-U>
--- Abbreviations ---

No abbreviation found
--- Highlighting ---
SpecialKey     xxx term=bold ctermfg=4 guifg=Blue
NonText        xxx term=bold ctermfg=12 gui=bold guifg=Blue
Directory      xxx term=bold ctermfg=4 guifg=Blue
ErrorMsg       xxx term=standout ctermfg=15 ctermbg=1 guifg=White guibg=Red
IncSearch      xxx term=reverse cterm=reverse gui=reverse
Search         xxx term=reverse ctermbg=11 guibg=Yellow
MoreMsg        xxx term=bold ctermfg=2 gui=bold guifg=SeaGreen
ModeMsg        xxx term=bold cterm=bold gui=bold
LineNr         xxx term=underline ctermfg=3 guifg=Brown
CursorLineNr   xxx term=bold ctermfg=3 gui=bold guifg=Brown
Question       xxx term=standout ctermfg=2 gui=bold guifg=SeaGreen
StatusLine     xxx term=bold,reverse cterm=bold,reverse gui=bold,reverse
StatusLineNC   xxx term=reverse cterm=reverse gui=reverse
VertSplit      xxx term=reverse cterm=reverse gui=reverse
Title          xxx term=bold ctermfg=5 gui=bold guifg=Magenta
Visual         xxx term=reverse ctermbg=7 guibg=LightGrey
VisualNOS      xxx term=bold,underline cterm=bold,underline gui=bold,underline
WarningMsg     xxx term=standout ctermfg=1 guifg=Red
WildMenu       xxx term=standout ctermfg=0 ctermbg=11 guifg=Black guibg=Yellow
Folded         xxx term=standout ctermfg=4 ctermbg=7 guifg=DarkBlue guibg=LightGrey
FoldColumn     xxx term=standout ctermfg=4 ctermbg=7 guifg=DarkBlue guibg=Grey
DiffAdd        xxx term=bold ctermbg=12 guibg=LightBlue
DiffChange     xxx term=bold ctermbg=13 guibg=LightMagenta
DiffDelete     xxx term=bold ctermfg=12 ctermbg=14 gui=bold guifg=Blue guibg=LightCyan
DiffText       xxx term=reverse cterm=bold ctermbg=9 gui=bold guibg=Red
SignColumn     xxx term=standout ctermfg=4 ctermbg=7 guifg=DarkBlue guibg=Grey
Conceal        xxx ctermfg=7 ctermbg=8 guifg=LightGrey guibg=DarkGrey
SpellBad       xxx term=reverse ctermbg=9 gui=undercurl guisp=Red
SpellCap       xxx term=reverse ctermbg=12 gui=undercurl guisp=Blue
SpellRare      xxx term=reverse ctermbg=13 gui=undercurl guisp=Magenta
SpellLocal     xxx term=underline ctermbg=14 gui=undercurl guisp=DarkCyan
Pmenu          xxx ctermfg=0 ctermbg=13 guibg=LightMagenta
PmenuSel       xxx ctermfg=0 ctermbg=7 guibg=Grey
PmenuSbar      xxx ctermbg=7 guibg=Grey
PmenuThumb     xxx ctermbg=0 guibg=Black
TabLine        xxx term=underline cterm=underline ctermfg=0 ctermbg=7 gui=underline guibg=LightGrey
TabLineSel     xxx term=bold cterm=bold gui=bold
TabLineFill    xxx term=reverse cterm=reverse gui=reverse
CursorColumn   xxx term=reverse ctermbg=7 guibg=Grey90
CursorLine     xxx term=underline cterm=underline guibg=Grey90
ColorColumn    xxx term=reverse ctermbg=9 guibg=LightRed
MatchParen     xxx term=reverse ctermbg=14 guibg=Cyan
Comment        xxx term=bold ctermfg=4 guifg=Blue
Constant       xxx term=underline ctermfg=1 guifg=Magenta
Special        xxx term=bold ctermfg=5 guifg=SlateBlue
Identifier     xxx term=underline ctermfg=6 guifg=DarkCyan
Statement      xxx term=bold ctermfg=3 gui=bold guifg=Brown
PreProc        xxx term=underline ctermfg=5 guifg=Purple
Type           xxx term=underline ctermfg=2 gui=bold guifg=SeaGreen
Underlined     xxx term=underline cterm=underline ctermfg=5 gui=underline guifg=SlateBlue
Ignore         xxx ctermfg=15 guifg=bg
Error          xxx term=reverse ctermfg=15 ctermbg=9 guifg=White guibg=Red
Todo           xxx term=standout ctermfg=0 ctermbg=11 guifg=Blue guibg=Yellow
String         xxx links to Constant
Character      xxx links to Constant
Number         xxx links to Constant
Boolean        xxx links to Constant
Float          xxx links to Number
Function       xxx links to Identifier
Conditional    xxx links to Statement
Repeat         xxx links to Statement
Label          xxx links to Statement
Operator       xxx links to Statement
Keyword        xxx links to Statement
Exception      xxx links to Statement
Include        xxx links to PreProc
Define         xxx links to PreProc
Macro          xxx links to PreProc
PreCondit      xxx links to PreProc
StorageClass   xxx links to Type
Structure      xxx links to Type
Typedef        xxx links to Type
Tag            xxx links to Special
SpecialChar    xxx links to Special
Delimiter      xxx links to Special
SpecialComment xxx links to Special
Debug          xxx links to Special
SyntasticErrorSign xxx links to Error
SyntasticWarningSign xxx links to Todo
SyntasticStyleErrorSign xxx links to SyntasticErrorSign
SyntasticStyleWarningSign xxx links to SyntasticWarningSign
SyntasticStyleErrorLine xxx links to SyntasticErrorLine
SyntasticErrorLine xxx cleared
SyntasticStyleWarningLine xxx links to SyntasticWarningLine
SyntasticWarningLine xxx cleared
SyntasticError xxx links to SpellBad
SyntasticWarning xxx links to SpellCap
SyntasticStyleError xxx links to SyntasticError
SyntasticStyleWarning xxx links to SyntasticWarning
airline_a_to_airline_b xxx ctermfg=190 ctermbg=238
airline_b_to_airline_c xxx ctermfg=238 ctermbg=234
airline_c_to_airline_x xxx ctermfg=234 ctermbg=234
airline_x_to_airline_y xxx ctermfg=238 ctermbg=234
airline_y_to_airline_z xxx ctermfg=190 ctermbg=238
airline_z_to_airline_warning xxx ctermfg=166 ctermbg=190
airline_x_inactive xxx ctermfg=239 ctermbg=236 guifg=#4e4e4e guibg=#303030
airline_x_inactive_bold xxx term=bold cterm=bold ctermfg=239 ctermbg=236 gui=bold guifg=#4e4e4e guibg=#303030
airline_x_inactive_red xxx ctermfg=160 ctermbg=236 guifg=#ff0000 guibg=#303030
airline_y_inactive xxx ctermfg=239 ctermbg=235 guifg=#4e4e4e guibg=#262626
airline_y_inactive_bold xxx term=bold cterm=bold ctermfg=239 ctermbg=235 gui=bold guifg=#4e4e4e guibg=#262626
airline_y_inactive_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000 guibg=#262626
airline_z_inactive xxx ctermfg=239 ctermbg=234 guifg=#4e4e4e guibg=#1c1c1c
airline_z_inactive_bold xxx term=bold cterm=bold ctermfg=239 ctermbg=234 gui=bold guifg=#4e4e4e guibg=#1c1c1c
airline_z_inactive_red xxx ctermfg=160 ctermbg=234 guifg=#ff0000 guibg=#1c1c1c
airline_a_inactive xxx ctermfg=239 ctermbg=234 guifg=#4e4e4e guibg=#1c1c1c
airline_a_inactive_bold xxx term=bold cterm=bold ctermfg=239 ctermbg=234 gui=bold guifg=#4e4e4e guibg=#1c1c1c
airline_a_inactive_red xxx ctermfg=160 ctermbg=234 guifg=#ff0000 guibg=#1c1c1c
airline_b_inactive xxx ctermfg=239 ctermbg=235 guifg=#4e4e4e guibg=#262626
airline_b_inactive_bold xxx term=bold cterm=bold ctermfg=239 ctermbg=235 gui=bold guifg=#4e4e4e guibg=#262626
airline_b_inactive_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000 guibg=#262626
airline_c_inactive xxx ctermfg=239 ctermbg=236 guifg=#4e4e4e guibg=#303030
airline_c_inactive_bold xxx term=bold cterm=bold ctermfg=239 ctermbg=236 gui=bold guifg=#4e4e4e guibg=#303030
airline_c_inactive_red xxx ctermfg=160 ctermbg=236 guifg=#ff0000 guibg=#303030
airline_warning_inactive xxx ctermfg=232 ctermbg=166 guifg=#000000 guibg=#df5f00
airline_warning_inactive_bold xxx term=bold cterm=bold ctermfg=232 ctermbg=166 gui=bold guifg=#000000 guibg=#df5f00
airline_warning_inactive_red xxx ctermfg=160 ctermbg=166 guifg=#ff0000 guibg=#df5f00
airline_x_to_airline_y_inactive xxx ctermfg=235 ctermbg=236
airline_z_to_airline_warning_inactive xxx ctermfg=166 ctermbg=234
airline_c_to_airline_x_inactive xxx ctermfg=236 ctermbg=236
airline_a_to_airline_b_inactive xxx ctermfg=234 ctermbg=235
airline_y_to_airline_z_inactive xxx ctermfg=234 ctermbg=235
airline_b_to_airline_c_inactive xxx ctermfg=235 ctermbg=236
airline_x      xxx ctermfg=85 ctermbg=234 guifg=#9cffd3 guibg=#202020
airline_x_bold xxx term=bold cterm=bold ctermfg=85 ctermbg=234 gui=bold guifg=#9cffd3 guibg=#202020
airline_x_red  xxx ctermfg=160 ctermbg=234 guifg=#ff0000 guibg=#202020
airline_y      xxx ctermfg=255 ctermbg=238 guifg=#ffffff guibg=#444444
airline_y_bold xxx term=bold cterm=bold ctermfg=255 ctermbg=238 gui=bold guifg=#ffffff guibg=#444444
airline_y_red  xxx ctermfg=160 ctermbg=238 guifg=#ff0000 guibg=#444444
airline_z      xxx ctermfg=17 ctermbg=190 guifg=#00005f guibg=#dfff00
airline_z_bold xxx term=bold cterm=bold ctermfg=17 ctermbg=190 gui=bold guifg=#00005f guibg=#dfff00
airline_z_red  xxx ctermfg=160 ctermbg=190 guifg=#ff0000 guibg=#dfff00
airline_a      xxx ctermfg=17 ctermbg=190 guifg=#00005f guibg=#dfff00
airline_a_bold xxx term=bold cterm=bold ctermfg=17 ctermbg=190 gui=bold guifg=#00005f guibg=#dfff00
airline_a_red  xxx ctermfg=160 ctermbg=190 guifg=#ff0000 guibg=#dfff00
airline_b      xxx ctermfg=255 ctermbg=238 guifg=#ffffff guibg=#444444
airline_b_bold xxx term=bold cterm=bold ctermfg=255 ctermbg=238 gui=bold guifg=#ffffff guibg=#444444
airline_b_red  xxx ctermfg=160 ctermbg=238 guifg=#ff0000 guibg=#444444
airline_c      xxx ctermfg=85 ctermbg=234 guifg=#9cffd3 guibg=#202020
airline_c_bold xxx term=bold cterm=bold ctermfg=85 ctermbg=234 gui=bold guifg=#9cffd3 guibg=#202020
airline_c_red  xxx ctermfg=160 ctermbg=234 guifg=#ff0000 guibg=#202020
airline_warning xxx ctermfg=232 ctermbg=166 guifg=#000000 guibg=#df5f00
airline_warning_bold xxx term=bold cterm=bold ctermfg=232 ctermbg=166 gui=bold guifg=#000000 guibg=#df5f00
airline_warning_red xxx ctermfg=160 ctermbg=166 guifg=#ff0000 guibg=#df5f00
airline_c1_inactive xxx ctermfg=239 ctermbg=236 guifg=#4e4e4e guibg=#303030
airline_y_to_airline_z_bold xxx term=bold cterm=bold ctermfg=190 ctermbg=238 gui=bold
airline_y_to_airline_z_red xxx ctermfg=160 ctermbg=238 guifg=#ff0000
airline_c_to_airline_x_bold xxx term=bold cterm=bold ctermfg=234 ctermbg=234 gui=bold
airline_c_to_airline_x_red xxx ctermfg=160 ctermbg=234 guifg=#ff0000
airline_a_to_airline_b_bold xxx term=bold cterm=bold ctermfg=190 ctermbg=238 gui=bold
airline_a_to_airline_b_red xxx ctermfg=160 ctermbg=238 guifg=#ff0000
airline_x_to_airline_y_bold xxx term=bold cterm=bold ctermfg=238 ctermbg=234 gui=bold
airline_x_to_airline_y_red xxx ctermfg=160 ctermbg=234 guifg=#ff0000
airline_b_to_airline_c_bold xxx term=bold cterm=bold ctermfg=238 ctermbg=234 gui=bold
airline_b_to_airline_c_red xxx ctermfg=160 ctermbg=234 guifg=#ff0000
airline_z_to_airline_warning_bold xxx term=bold cterm=bold ctermfg=166 ctermbg=190 gui=bold
airline_z_to_airline_warning_red xxx ctermfg=160 ctermbg=190 guifg=#ff0000
NERDTreeFlag   xxx links to Ignore
NERDTreeUp     xxx links to Directory
NERDTreeClosable xxx links to Type
NERDTreeOpenable xxx links to Title
NERDTreePart   xxx links to Special
NERDTreePartFile xxx links to Type
NERDTreeHelpKey xxx links to Identifier
NERDTreeHelpTitle xxx links to Macro
NERDTreeToggleOn xxx links to Question
NERDTreeToggleOff xxx links to WarningMsg
NERDTreeHelpCommand xxx links to Identifier
NERDTreeHelp   xxx links to String
NERDTreeBookmark xxx links to Normal
NERDTreeRO     xxx links to WarningMsg
NERDTreeDirSlash xxx links to Identifier
NERDTreeLink   xxx links to Macro
NERDTreeDir    xxx links to Directory
NERDTreeExecFile xxx links to Title
NERDTreeFile   xxx links to Normal
NERDTreeCWD    xxx links to Statement
NERDTreeBookmarksLeader xxx links to Ignore
NERDTreeBookmarksHeader xxx links to Statement
NERDTreeBookmarkName xxx links to Identifier
Normal         xxx cleared
NERDTreeCurrentNode xxx links to Search
airline_c1_to_airline_x xxx ctermfg=234 ctermbg=1
airline_c3_inactive xxx ctermfg=239 ctermbg=236 guifg=#4e4e4e guibg=#303030
airline_a_to_airline_b_inactive_inactive xxx ctermfg=234 ctermbg=235
airline_a_to_airline_b_inactive_inactive_bold xxx term=bold cterm=bold ctermfg=234 ctermbg=235 gui=bold
airline_a_to_airline_b_inactive_inactive_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_b_to_airline_c_inactive_inactive xxx ctermfg=235 ctermbg=236
airline_b_to_airline_c_inactive_inactive_bold xxx term=bold cterm=bold ctermfg=235 ctermbg=236 gui=bold
airline_b_to_airline_c_inactive_inactive_red xxx ctermfg=160 ctermbg=236 guifg=#ff0000
airline_y_to_airline_z_inactive_inactive xxx ctermfg=234 ctermbg=235
airline_y_to_airline_z_inactive_inactive_bold xxx term=bold cterm=bold ctermfg=234 ctermbg=235 gui=bold
airline_y_to_airline_z_inactive_inactive_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_c_to_airline_x_inactive_inactive xxx ctermfg=236 ctermbg=236
airline_c_to_airline_x_inactive_inactive_bold xxx term=bold cterm=bold ctermfg=236 ctermbg=236 gui=bold
airline_c_to_airline_x_inactive_inactive_red xxx ctermfg=160 ctermbg=236 guifg=#ff0000
airline_z_to_airline_warning_inactive_inactive xxx ctermfg=166 ctermbg=234
airline_z_to_airline_warning_inactive_inactive_bold xxx term=bold cterm=bold ctermfg=166 ctermbg=234 gui=bold
airline_z_to_airline_warning_inactive_inactive_red xxx ctermfg=160 ctermbg=234 guifg=#ff0000
airline_x_to_airline_y_inactive_inactive xxx ctermfg=235 ctermbg=236
airline_x_to_airline_y_inactive_inactive_bold xxx term=bold cterm=bold ctermfg=235 ctermbg=236 gui=bold
airline_x_to_airline_y_inactive_inactive_red xxx ctermfg=160 ctermbg=236 guifg=#ff0000
airline_c1_to_airline_x_inactive xxx ctermfg=236 ctermbg=236
javaScriptCommentTodo xxx links to Todo
javaScriptLineComment xxx links to Comment
javaScriptCommentSkip xxx cleared
javaScriptComment xxx links to Comment
javaScriptSpecial xxx links to Special
javaScriptStringD xxx links to String
javaScriptStringS xxx links to String
javaScriptSpecialCharacter xxx links to javaScriptSpecial
javaScriptNumber xxx links to javaScriptValue
javaScriptRegexpString xxx links to String
javaScriptConditional xxx links to Conditional
javaScriptRepeat xxx links to Repeat
javaScriptBranch xxx links to Conditional
javaScriptOperator xxx links to Operator
javaScriptType xxx links to Type
javaScriptStatement xxx links to Statement
javaScriptBoolean xxx links to Boolean
javaScriptNull xxx links to Keyword
javaScriptIdentifier xxx links to Identifier
javaScriptLabel xxx links to Label
javaScriptException xxx links to Exception
javaScriptMessage xxx links to Keyword
javaScriptGlobal xxx links to Keyword
javaScriptMember xxx links to Keyword
javaScriptDeprecated xxx links to Exception
javaScriptReserved xxx links to Keyword
javaScriptFunction xxx links to Function
javaScriptBraces xxx links to Function
javaScriptParens xxx cleared
javaScriptCharacter xxx links to Character
javaScriptValue xxx cleared
javaScriptError xxx links to Error
javaScrParenError xxx links to javaScriptError
javaScriptDebug xxx links to Debug
javaScriptConstant xxx links to Label
airline_c1_to_airline_x_inactive_inactive xxx ctermfg=236 ctermbg=236
airline_c1_to_airline_x_inactive_inactive_bold xxx term=bold cterm=bold ctermfg=236 ctermbg=236 gui=bold
airline_c1_to_airline_x_inactive_inactive_red xxx ctermfg=160 ctermbg=236 guifg=#ff0000
airline_c1_to_airline_x_bold xxx term=bold cterm=bold ctermfg=234 ctermbg=1 gui=bold
airline_c1_to_airline_x_red xxx ctermfg=160 ctermbg=1 guifg=#ff0000
airline_c4_inactive xxx ctermfg=239 ctermbg=236 guifg=#4e4e4e guibg=#303030
airline_c4_to_airline_x xxx ctermfg=234 ctermbg=1
airline_c4_to_airline_x_inactive xxx ctermfg=236 ctermbg=236
airline_c4_to_airline_x_inactive_inactive xxx ctermfg=236 ctermbg=236
airline_c4_to_airline_x_inactive_inactive_bold xxx term=bold cterm=bold ctermfg=236 ctermbg=236 gui=bold
airline_c4_to_airline_x_inactive_inactive_red xxx ctermfg=160 ctermbg=236 guifg=#ff0000
airline_c5_inactive xxx ctermfg=239 ctermbg=236 guifg=#4e4e4e guibg=#303030
airline_c4_to_airline_x_bold xxx term=bold cterm=bold ctermfg=234 ctermbg=1 gui=bold
airline_c4_to_airline_x_red xxx ctermfg=160 ctermbg=1 guifg=#ff0000
airline_c5_to_airline_x xxx ctermfg=234 ctermbg=1
airline_c5_to_airline_x_inactive xxx ctermfg=236 ctermbg=236
airline_c5_to_airline_x_inactive_inactive xxx ctermfg=236 ctermbg=236
airline_c5_to_airline_x_inactive_inactive_bold xxx term=bold cterm=bold ctermfg=236 ctermbg=236 gui=bold
airline_c5_to_airline_x_inactive_inactive_red xxx ctermfg=160 ctermbg=236 guifg=#ff0000
airline_c5_to_airline_x_bold xxx term=bold cterm=bold ctermfg=234 ctermbg=1 gui=bold
airline_c5_to_airline_x_red xxx ctermfg=160 ctermbg=1 guifg=#ff0000
airline_c6_inactive xxx ctermfg=239 ctermbg=236 guifg=#4e4e4e guibg=#303030
airline_c6_to_airline_x xxx ctermfg=234 ctermbg=1
airline_c6_to_airline_x_inactive xxx ctermfg=236 ctermbg=236
airline_c6_to_airline_x_inactive_inactive xxx ctermfg=236 ctermbg=236
airline_c6_to_airline_x_inactive_inactive_bold xxx term=bold cterm=bold ctermfg=236 ctermbg=236 gui=bold
airline_c6_to_airline_x_inactive_inactive_red xxx ctermfg=160 ctermbg=236 guifg=#ff0000
airline_c6_to_airline_x_bold xxx term=bold cterm=bold ctermfg=234 ctermbg=1 gui=bold
airline_c6_to_airline_x_red xxx ctermfg=160 ctermbg=1 guifg=#ff0000
<              xxx cleared
EasyMotionTargetDefault xxx cterm=bold ctermfg=9 gui=bold guifg=#ff0000
EasyMotionTarget xxx links to EasyMotionTargetDefault
EasyMotionTarget2FirstDefault xxx cterm=bold ctermfg=11 gui=bold guifg=#ffb400
EasyMotionTarget2First xxx links to EasyMotionTarget2FirstDefault
EasyMotionTarget2SecondDefault xxx cterm=bold ctermfg=11 gui=bold guifg=#b98300
EasyMotionTarget2Second xxx links to EasyMotionTarget2SecondDefault
EasyMotionShadeDefault xxx ctermfg=7 guifg=#777777
EasyMotionShade xxx links to EasyMotionShadeDefault
EasyMotionIncSearchDefault xxx cterm=bold ctermfg=10 gui=bold guifg=#7fbf00
EasyMotionIncSearch xxx links to EasyMotionIncSearchDefault
EasyMotionIncCursorDefault xxx cterm=bold ctermfg=0 ctermbg=14 gui=bold guifg=#121813 guibg=#ACDBDA
EasyMotionIncCursor xxx links to EasyMotionIncCursorDefault
EasyMotionMoveHLDefault xxx cterm=bold ctermfg=15 ctermbg=10 gui=bold guifg=#121813 guibg=#7fbf00
EasyMotionMoveHL xxx links to EasyMotionMoveHLDefault
--- Variables ---
NERDTreeMapPreviewSplit  gi
syntastic_auto_loc_list #2
NERDTreeMapCloseChildren  X
loaded_syntastic_javascript_jshint_checker #1
NERDTreeOpener        {'_previousWindow': function('162'), '_openDirectory': function('161'), '_restoreCursorPos': function('163'), '_saveCursorPos': function('165'), '_newSplit': function('157'), '_checkToCloseTree': function('154'), '_newVSplit': function('158'), '_openFile': function('160'), 'open': function('159'), '_gotoTargetWin': function('155'), 'New': function('156'), '_reuseWindow': function('164')}
NERDTreeShowHidden     0
loaded_nerdtree_fs_menu #1
EasyMotion_off_screen_search #1
loaded_sensible       #1
loaded_syntastic_checker #1
airline_right_sep      <
NERDTreeMapCloseDir    x
EasyMotion_move_highlight #1
syntastic_defaults    {'aggregate_errors': 0, 'reuse_loc_lists': 1, 'check_on_open': 0, 'bash_hack': 1, 'check_on_wq': 1, 'ignore_files': [], 'quiet_messages': {}, 'auto_loc_list': 2, 'sort_aggregated_errors': 1, 'warning_symbol': '>>', 'error_symbol': '>>', 'enable_balloons': 1, 'echo_current_error': 1, 'enable_highlighting': 1, 'id_checkers': 1, 'always_populate_loc_list': 0, 'stl_format': '[Syntax: line:%F (%t)]', 'full_redraws': 1, 'auto_jump': 0, 'loc_list_height': 10, 'style_error_symbol': 'S>', 'debug': 0, 'enable_signs': 1, 'filetype_map': {}, 'style_warning_symbol': 'S>'}
airline_symbols       {'linenr': ':', 'paste': 'PASTE', 'readonly': 'RO', 'modified': '+', 'space': ' ', 'whitespace': '!', 'branch': ''}
syntastic_full_redraws #1
NERDTreeSortOrder     ['\/$', '*', '\.swp$', '\.bak$', '\~$']
NERDTreeMinimalUI      0
loaded_zipPlugin       v27
NERDTreeMapRefresh     r
loaded_2html_plugin    vim7.4_v1
EasyMotion_use_migemo #1
loaded_spellfile_plugin #1
syntastic_check_on_wq #1
SyntasticDebugAutocommands #8
NERDTreeAutoDeleteBuffer #0
airline_section_a      %#__accent_bold#%{airline#util#wrap(airline#parts#mode(),0)}%#__restore__#%{airline#util#append(airline#parts#paste(),0)}%{airline#util#append(airline#parts#iminsert(),0)}
airline_section_b      %{airline#util#wrap(airline#extensions#branch#get_head(),0)}
airline_section_c      %<%f%m %#__accent_red#%{airline#util#wrap(airline#parts#readonly(),0)}%#__restore__#
syntastic_enable_balloons #0
airline_theme          dark
loaded_syntastic_javascript_gjslint_checker #1
EasyMotion_smartcase  #1
airline_section_x      %{airline#util#wrap(airline#parts#filetype(),0)}
airline_section_y      %{airline#util#wrap(airline#parts#ffenc(),0)}
NERDTreeIgnore        ['\~$']
more_save             #1
loaded_syntastic_notifier_balloons #1
NERDTreeBookmarksFile  /Users/rolf/.NERDTreeBookmarks
SyntasticNotifiers    {'Instance': function('247'), '_initNotifiers': function('250'), 'reset': function('249'), 'refresh': function('248')}
NERDTreeMapToggleHidden  I
NERDTreeWinSize        31
loaded_nerdtree_autoload #1
loaded_gzip           #1
EasyMotion_enter_jump_first #0
syntastic_javascript_jshint_conf  
netrw_force_overwrite_statusline #0
EditorConfig_exec_path  
loaded_getscriptPlugin  v36
syntastic_bash_hack   #1
EasyMotion_use_upper  #1
UseNumberToggleTrigger #1
EasyMotion_do_mapping #0
syntastic_always_populate_loc_list #0
SyntasticBalloonsNotifier {'enabled': function('188'), 'reset': function('190'), 'New': function('187'), 'refresh': function('189')}
NERDTreeCreator       {'BufNamePrefix': function('168'), 'createSecondary': function('172'), '_createTreeWin': function('175'), 'TogglePrimary': function('182'), '_nextBufferName': function('177'), 'togglePrimary': function('183'), 'createMirror': function('174'), '_setupStatusline': function('181'), 'CreatePrimary': function('169'), '_setCommonBufOptions': function('180'), 'CreateSecondary': function('171'), 'New': function('176'), '_NextBufNum': 2, '_broadcastInitEvent': function('167'), 'CreateMirror': function('173'), '_pathForString': function('179'), 'createPrimary': function('170'), '_nextBufferNumber': function('178'), '_bindMappings': function('166')}
SyntasticModeMap      {'isPassive': function('242'), '_noFiletypesArePassive': function('246'), 'Instance': function('239'), 'toggleMode': function('243'), '_isOneFiletypeActive': function('245'), 'echoMode': function('244'), 'synch': function('240'), 'allowsAutoChecking': function('241')}
airline#extensions#tabline#left_sep   
EasyMotion_keys        asdghklqwertyuiopzxcvbnmfj;
syntastic_javascript_gjslint_conf  
loaded_syntastic_modemap #1
EasyMotion_hl_group_target  EasyMotionTarget
syntastic_javascript_closure_compiler_options  
syntastic_check_on_open #0
NERDTreeMapPreview     go
fugitive_summary_format  %s
loaded_vimball         v35
EasyMotion_ignore_exception #0
did_load_filetypes    #1
NERDTreeNotificationThreshold  100
NERDTreeMapActivateNode  o
syntastic_warning_symbol  >>
airline_detect_modified #1
loaded_vimballPlugin   v35
NERDTreeWinPos         left
airline_mode_map      {'c': 'COMMAND', '^S': 'S-BLOCK', 'R': 'REPLACE', 's': 'SELECT', 'V': 'V-LINE', '^V': 'V-BLOCK', 'i': 'INSERT', '__': '------', 'S': 'S-LINE', 'v': 'VISUAL', 'n': 'NORMAL'}
loaded_tarPlugin       v29
airline_detect_iminsert #0
EasyMotion_disable_two_key_combo #0
NERDTreeMapMenu        m
syntastic_reuse_loc_lists #1
EasyMotion_space_jump_first #0
NERDTreeStatusline     %{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}
EasyMotion_use_regexp #1
NERDTreeFileNode      {'isRoot': function('112'), 'openInNewTab': function('118'), 'rename': function('121'), 'activate': function('96'), 'clearBookmarks': function('99'), 'displayString': function('102'), 'cacheParent': function('98'), 'delete': function('101'), 'New': function('114'), 'findNode': function('104'), '_renderToString': function('123'), 'openSplit': function('116'), 'makeRoot': function('113'), 'findOpenDirSiblingWithVisibleChildren': function('105'), 'findSibling': function('106'), 'renderToString': function('122'), 'refresh': function('120'), 'openVSplit': function('117'), 'GetRootLineNum': function('109'), 'bookmark': function('97'), 'putCursorHere': function('119'), 'getLineNum': function('107'), 'equals': function('103'), 'isVisible': function('111'), 'copy': function('100'), 'GetSelected': function('110'), 'open': function('115'), 'GetRootForTab': function('108')}
syntastic_echo_current_error #1
NERDTreeMapOpenInTabSilent  T
NERDTreePath          {'copyingWillOverwrite': function('9'), 'ignore': function('21'), 'delete': function('10'), 'getSortOrderIndex': function('18'), 'compareTo': function('5'), 'AbsolutePathFor': function('1'), 'displayString': function('11'), 'rename': function('31'), 'CopyingSupported': function('8'), '_strForUI': function('33'), 'strTrunk': function('38'), 'cacheDisplayString': function('3'), 'getLastPathComponent': function('17'), 'edit': function('12'), 'exists': function('14'), 'isUnixHiddenPath': function('20'), 'JoinPathStrings': function('24'), 'Slash': function('27'), 'bookmarkNames': function('2'), 'tabnr': function('39'), 'Create': function('6'), 'readInfoFromDisk': function('29'), '_strForGlob': function('36'), 'isUnder': function('23'), 'extractDriveLetter': function('13'), '_strForCd': function('34'), 'New': function('26'), 'getDir': function('15'), 'str': function('32'), '_ignorePatternMatches': function('22'), 'equals': function('25'), '_str': function('37'), 'WinToUnixPath': function('40'), 'copy': function('7'), 'isUnixHiddenFile': function('19'), 'refresh': function('30'), 'changeToDir': function('4'), '_strForEdit': function('35'), 'getParent': function('16'), 'Resolve': function('28')}
NERDTreeMapHelp        ?
NERDTreeMapJumpParent  p
NERDTreeMapToggleFilters  f
NERDTreeCasadeOpenSingleChildDir  1
loaded_syntastic_notifier_signs #1
NERDTreeAutoCenter     1
syntastic_debug       #0
NERDTreeMapJumpPrevSibling  <C-k>
SyntasticDebugTrace   #1
NERDTreeShowBookmarks  0
NERDTreeRemoveDirCmd   rm -rf 
focus                 #1
loaded_syntastic_javascript_jsxhint_checker #1
NERDTreeMenuItem      {'isSeparator': function('60'), 'All': function('53'), 'AllEnabled': function('54'), 'execute': function('59'), 'enabled': function('58'), 'isSubmenu': function('61'), 'Create': function('55'), 'CreateSubmenu': function('57'), 'CreateSeparator': function('56')}
airline_left_alt_sep   >
airline#extensions#quickfix#location_text  Location
zipPlugin_ext          *.zip,*.jar,*.xpi,*.ja,*.war,*.ear,*.celzip,*.oxt,*.kmz,*.wsz,*.xap,*.docx,*.docm,*.dotx,*.dotm,*.potx,*.potm,*.ppsx,*.ppsm,*.pptx,*.pptm,*.ppam,*.sldx,*.thmx,*.xlam,*.xlsx,*.xlsm,*.xlsb,*.xltx,*.xltm,*.xlam,*.crtx,*.vdw,*.glox,*.gcsx,*.gqsx
NERDTreeMapOpenInTab   t
syntastic_error_symbol  >>
EasyMotion_show_prompt #1
syntastic_filetype_map {}
loaded_matchparen     #1
EasyMotion_add_search_history #1
NERDTreeChDirMode      0
EasyMotion_do_shade   #1
SyntasticLoclist      {'decorate': function('231'), 'getFirstIssue': function('224'), 'current': function('216'), 'deploy': function('229'), 'setOwner': function('228'), 'sort': function('218'), 'getName': function('225'), 'filter': function('236'), 'extend': function('217'), 'warnings': function('233'), 'getStatuslineFlag': function('223'), 'isEmpty': function('219'), 'destroy': function('230'), 'messages': function('235'), 'getRaw': function('221'), 'setloclist': function('237'), 'New': function('215'), 'getOwner': function('227'), 'show': function('238'), 'hasErrorsOrWarningsToDisplay': function('234'), 'getBuffers': function('222'), 'errors': function('232'), 'copyRaw': function('220'), 'setName': function('226')}
loaded_matchit        #1
airline_exclude_filenames ['DebuggerWatch', 'DebuggerStack', 'DebuggerStatus']
airline_exclude_preview #0
EasyMotion_grouping   #1
EasyMotion_inc_highlight #1
NERDTreeShowFiles      1
loaded_numbertoggle   #1
NERDTreeMapOpenSplit   i
EasyMotion_skipfoldedline #1
NERDTreeCaseSensitiveSort  0
syntastic_style_warning_symbol  S>
ft_ignore_pat          \.\(Z\|gz\|bz2\|zip\|tgz\)$
SyntasticDebugVariables #16
NERDTreeHijackNetrw    1
SyntasticRegistry     {'getCheckers': function('253'), 'getCheckersAvailable': function('254'), 'getNamesOfAvailableCheckers': function('256'), 'Instance': function('251'), '_loadCheckersFor': function('260'), '_filterCheckersByName': function('259'), 'echoInfoFor': function('257'), '_checkDeprecation': function('261'), 'CreateAndRegisterChecker': function('252'), 'getKnownFiletypes': function('255'), '_registerChecker': function('258')}
EasyMotion_hl_move     EasyMotionMoveHL
NERDTreeShowLineNumbers  0
syntastic_stl_format   [Syntax: line:%F (%t)]
NERDTreeKeyMap        {'All': function('62'), 'BindAll': function('64'), 'Create': function('69'), 'bind': function('65'), 'Add': function('70'), 'FindFor': function('63'), 'Invoke': function('68'), 'invoke': function('67'), 'Remove': function('66')}
NERDTreeHighlightCursorline  1
airline_right_alt_sep  <
syntastic_enable_highlighting #1
loaded_syntastic_util_autoload #1
SyntasticSignsNotifier {'_signErrors': function('266'), '_bufSignIds': function('268'), 'enabled': function('263'), '_setup': function('265'), '_removeSigns': function('267'), 'New': function('262'), 'refresh': function('264')}
NERDTreeMouseMode      1
airline_detect_paste  #1
EasyMotion_re_line_anywhere  \v(<.|^$)|(.>|^$)|(\l)\zs(\u)|(_\zs.)|(#\zs.)
matchparen_insert_timeout #60
loaded_syntastic_notifier_cursor #1
syntastic_enable_signs #1
NERDTreeDirNode       {'activate': function('125'), 'getChildIndex': function('134'), 'renderToString': function('122'), 'reveal': function('149'), 'refresh': function('148'), 'GetRootLineNum': function('109'), 'openInNewTab': function('144'), 'getVisibleChildCount': function('136'), 'transplantChild': function('153'), 'getVisibleChildren': function('137'), 'GetRootForTab': function('108'), 'addChild': function('126'), '_openRecursively2': function('147'), 'close': function('127'), 'delete': function('101'), '_renderToString': function('123'), 'openSplit': function('116'), 'hasVisibleChildren': function('138'), 'findOpenDirSiblingWithVisibleChildren': function('105'), 'openExplorer': function('143'), 'sortChildren': function('151'), 'AbsoluteTreeRoot': function('124'), 'getLineNum': function('107'), 'bookmark': function('97'), 'openVSplit': function('117'), 'isVisible': function('111'), 'copy': function('100'), 'GetSelected': function('135'), 'isRoot': function('112'), 'openAlong': function('142'), 'rename': function('121'), 'displayString': function('102'), 'cacheParent': function('98'), 'getChildByIndex': function('133'), 'findNode': function('130'), 'New': function('140'), 'removeChild': function('150'), '_initChildren': function('139'), 'getChild': function('132'), 'openRecursively': function('146'), 'toggleOpen': function('152'), 'equals': function('103'), '_openInNewTab': function('145'), 'clearBookmarks': function('99'), 'open': function('141'), 'makeRoot': function('113'), 'findSibling': function('106'), 'closeChildren': function('128'), 'putCursorHere': function('119'), 'createChild': function('129'), 'getChildCount': function('131')}
airline#extensions#quickfix#quickfix_text  Quickfix
syntastic_jshint_exec  jshint
EasyMotion_re_anywhere  \v(<.|^$)|(.>|^$)|(\l)\zs(\u)|(_\zs.)|(#\zs.)
NERDTreeMapCWD         CD
loaded_airline        #1
NERDTreeMapPreviewVSplit  gs
EditorConfig_python_files_dir  plugin/editorconfig-core-py
NERDChristmasTree      1
netrw_cygwin          #0
SyntasticAutoloclistNotifier {'AutoToggle': function('186'), 'New': function('184'), 'refresh': function('185')}
EditorConfig_verbose  #0
syntax_on             #1
SyntasticDebugLoclist #2
loaded_syntastic_javascript_closurecompiler_checker #1
airline_statusline_funcrefs [function('airline#extensions#quickfix#apply'), function('airline#extensions#netrw#apply')]
loaded_netrwPlugin     v152
EasyMotion_hl2_first_group_target  EasyMotionTarget2First
syntastic_javascript_jsl_conf  
NERDTreeMapChdir       cd
NERDTreeMapToggleZoom  A
NERDTreeBookmark      {'CacheBookmarks': function('77'), 'BookmarkNames': function('76'), 'openInNewTab': function('88'), 'activate': function('71'), 'open': function('87'), 'delete': function('80'), 'validate': function('94'), 'ToRoot': function('93'), 'New': function('86'), 'compareTo': function('78'), 'Bookmarks': function('73'), 'ClearAll': function('79'), 'InvalidBookmarks': function('84'), 'AddBookmark': function('72'), 'getNode': function('81'), 'toRoot': function('92'), 'str': function('91'), 'BookmarkFor': function('75'), 'Sort': function('90'), 'mustExist': function('85'), 'BookmarkExistsFor': function('74'), 'GetNodeForName': function('82'), 'GetSelected': function('83'), 'Write': function('95'), 'setPath': function('89')}
insertmode            #0
EasyMotion_use_smartsign_jp #1
loaded_syntastic_loclist #1
matchparen_timeout    #300
EasyMotion_hl_inc_search  EasyMotionIncSearch
NERDTreeMapRefreshRoot  R
EasyMotion_cursor_highlight #1
syntastic_start       [1411737315, 850470]
airline_section_gutter  %=
syntastic_ignore_files []
syntastic_auto_jump   #0
EasyMotion_hl2_second_group_target  EasyMotionTarget2Second
loaded_syntastic_log_autoload #1
NERDTreeMapOpenVSplit  s
EasyMotion_startofline #0
SyntasticCursorNotifier {'enabled': function('207'), 'reset': function('209'), 'New': function('206'), 'refresh': function('208')}
syntastic_id_checkers #1
SyntasticChecker      {'_populateHighlightRegexes': function('203'), 'isAvailable': function('201'), 'setWantSort': function('199'), 'getFiletype': function('192'), '_shescape': function('205'), 'getName': function('193'), 'getLocList': function('197'), 'getWantSort': function('198'), '_quietMessages': function('202'), '_getOpt': function('204'), 'getExec': function('194'), 'getExecEscaped': function('195'), 'New': function('191'), 'makeprgBuild': function('200'), 'getLocListRaw': function('196')}
loaded_syntastic_notifiers #1
NERDTreeMapJumpLastChild  J
airline#themes#dark#palette {'normal_modified': {'airline_c5_to_airline_x': ['', '', '234', 1], 'airline_c1_to_airline_x': ['', '', '234', 1], 'airline_b_to_airline_c': ['', '', '238', '53'], 'airline_c_to_airline_x': ['', '', '234', '53'], 'airline_a_to_airline_b': ['', '', '190', '238'], 'airline_x_to_airline_y': ['', '', '238', '234'], 'airline_c6_to_airline_x': ['', '', '234', 1], 'airline_c4_to_airline_x': ['', '', '234', 1], 'airline_z_to_airline_warning': ['', '', '166', '190'], 'airline_warning': ['#000000', '#df5f00', 232, 166], 'airline_c': ['#ffffff', '#5f005f', 255, 53, ''], 'airline_y_to_airline_z': ['', '', '190', '238']}, 'inactive': {'airline_c1_to_airline_x_inactive': ['', '', '236', '236'], 'airline_c5_to_airline_x_inactive': ['', '', '236', '236'], 'airline_c_to_airline_x_inactive': ['', '', '236', '236'], 'airline_x': ['#4e4e4e', '#303030', 239, 236, ''], 'airline_y': ['#4e4e4e', '#262626', 239, 235, ''], 'airline_z': ['#4e4e4e', '#1c1c1c', 239, 234, ''], 'airline_a_to_airline_b_inactive': ['', '', '234', '235'], 'airline_z_to_airline_warning_inactive': ['', '', '166', '234'], 'airline_x_to_airline_y_inactive': ['', '', '235', '236'], 'airline_c4_to_airline_x_inactive': ['', '', '236', '236'], 'airline_b_to_airline_c_inactive': ['', '', '235', '236'], 'airline_y_to_airline_z_inactive': ['', '', '234', '235'], 'airline_warning': ['#000000', '#df5f00', 232, 166], 'airline_c6_to_airline_x_inactive': ['', '', '236', '236'], 'airline_a': ['#4e4e4e', '#1c1c1c', 239, 234, ''], 'airline_b': ['#4e4e4e', '#262626', 239, 235, ''], 'airline_c': ['#4e4e4e', '#303030', 239, 236, '']}, 'replace': {'airline_x': ['#ffffff', '#000080', 15, 17, ''], 'airline_y': ['#ffffff', '#005fff', 255, 27, ''], 'airline_z': ['#00005f', '#00dfff', 17, 45, ''], 'airline_a': ['#ffffff', '#af0000', 255, 124, ''], 'airline_b': ['#ffffff', '#005fff', 255, 27, ''], 'airline_c': ['#ffffff', '#000080', 15, 17, ''], 'airline_warning': ['#000000', '#df5f00', 232, 166]}, 'normal': {'airline_x_to_airline_y': ['', '', '238', '234'], 'airline_c4_to_airline_x': ['', '', '234', 1], 'airline_x': ['#9cffd3', '#202020', 85, 234, ''], 'airline_y': ['#ffffff', '#444444', 255, 238, ''], 'airline_z': ['#00005f', '#dfff00', 17, 190, ''], 'airline_a_to_airline_b': ['', '', '190', '238'], 'airline_b_to_airline_c': ['', '', '238', '234'], 'airline_c1_to_airline_x': ['', '', '234', 1], 'airline_warning': ['#000000', '#df5f00', 232, 166], 'airline_c_to_airline_x': ['', '', '234', '234'], 'airline_c6_to_airline_x': ['', '', '234', 1], 'airline_c': ['#9cffd3', '#202020', 85, 234, ''], 'airline_z_to_airline_warning': ['', '', '166', '190'], 'airline_a': ['#00005f', '#dfff00', 17, 190, ''], 'airline_b': ['#ffffff', '#444444', 255, 238, ''], 'airline_y_to_airline_z': ['', '', '190', '238'], 'airline_c5_to_airline_x': ['', '', '234', 1]}, 'insert_paste': {'airline_a': ['#00005f', '#d78700', 17, 172, ''], 'airline_warning': ['#000000', '#df5f00', 232, 166]}, 'visual_modified': {'airline_warning': ['#000000', '#df5f00', 232, 166], 'airline_c': ['#ffffff', '#5f005f', 255, 53, '']}, 'insert_modified': {'airline_c5_to_airline_x': ['', '', '17', 1], 'airline_c1_to_airline_x': ['', '', '17', 1], 'airline_b_to_airline_c': ['', '', '27', '53'], 'airline_c_to_airline_x': ['', '', '17', '53'], 'airline_a_to_airline_b': ['', '', '45', '27'], 'airline_x_to_airline_y': ['', '', '27', '17'], 'airline_c6_to_airline_x': ['', '', '17', 1], 'airline_c4_to_airline_x': ['', '', '17', 1], 'airline_z_to_airline_warning': ['', '', '166', '45'], 'airline_warning': ['#000000', '#df5f00', 232, 166], 'airline_c': ['#ffffff', '#5f005f', 255, 53, ''], 'airline_y_to_airline_z': ['', '', '45', '27']}, 'inactive_modified': {'airline_warning': ['#000000', '#df5f00', 232, 166], 'airline_c': ['#875faf', '', 97, '', '']}, 'visual': {'airline_x': ['#ffffff', '#5f0000', 15, 52, ''], 'airline_y': ['#000000', '#ff5f00', 232, 202, ''], 'airline_z': ['#000000', '#ffaf00', 232, 214, ''], 'airline_a': ['#000000', '#ffaf00', 232, 214, ''], 'airline_b': ['#000000', '#ff5f00', 232, 202, ''], 'airline_c': ['#ffffff', '#5f0000', 15, 52, ''], 'airline_warning': ['#000000', '#df5f00', 232, 166]}, 'replace_modified': {...}, 'insert': {'airline_x_to_airline_y': ['', '', '27', '17'], 'airline_c4_to_airline_x': ['', '', '17', 1], 'airline_x': [...], 'airline_y': [...], 'airline_z': [...], 'airline_c5_to_airline_x': ['', '', '17', 1], 'airline_b_to_airline_c': ['', '', '27', '17'], 'airline_c1_to_airline_x': ['', '', '17', 1], 'airline_warning': ['#000000', '#df5f00', 232, 166], 'airline_a_to_airline_b': ['', '', '45', '27'], 'airline_c6_to_airline_x': ['', '', '17', 1], 'airline_c': [...], 'airline_z_to_airline_warning': ['', '', '166', '45'], 'airline_a': ['#00005f', '#00dfff', 17, 45, ''], 'airline_b': [...], 'airline_y_to_airline_z': ['', '', '45', '27'], 'airline_c_to_airline_x': ['', '', '17', '17']}, 'accents': {'orange': ['#df5f00', '', 166, ''], 'bold': ['', '', '', '', 'bold'], 'blue': ['#005fff', '', 27, ''], 'green': ['#008700', '', 22, ''], 'purple': ['#af00df', '', 128, ''], 'italic': ['', '', '', '', 'italic'], 'yellow': ['#dfff00', '', 190, ''], 'airline_warning': ['#000000', '#df5f00', 232, 166], 'red': ['#ff0000', '', 160, '']}}
loaded_syntastic_registry #1
EasyMotion_use_smartsign_us #1
loaded_EditorConfig   #1
syntastic_aggregate_errors #0
NERDTreeMapDeleteBookmark  D
loaded_syntastic_javascript_jsl_checker #1
airline_theme_map     {'.*zenburn.*': 'zenburn', 'Tomorrow.*': 'tomorrow', 'wombat.*': 'wombat', 'base16.*': 'base16', 'mo[l|n]okai': 'molokai', '.*solarized.*': 'solarized'}
mustache_operators    #0
NERDTreeMenuController {'_echoPrompt': function('43'), '_cursorDown': function('51'), 'showMenu': function('42'), '_setCmdheight': function('48'), '_nextIndexFor': function('47'), '_allIndexesFor': function('46'), '_cursorUp': function('52'), '_saveOptions': function('49'), '_current': function('44'), '_handleKeypress': function('45'), 'New': function('41'), '_restoreOptions': function('50')}
syntastic_version      3.4.0-87
NERDTreeMapJumpNextSibling  <C-j>
syntastic_style_error_symbol  S>
airline#extensions#tabline#left_alt_sep  |
did_load_ftplugin     #1
SyntasticDebugNotifications #4
airline_inactive_collapse #1
NERDTreeAutoCenterThreshold  3
NERDTreeMapJumpRoot    P
loaded_syntastic_javascript_jscs_checker #1
NERDTreeCopyCmd        cp -r 
airline_section_z      %3p%% %{g:airline_symbols.linenr}%#__accent_bold#%4l%#__restore__#:%3c 
loaded_syntastic_plugin #1
loaded_syntastic_notifier_autoloclist #1
NERDTreeMapQuit        q
NERDTreeMapChangeRoot  C
syntastic_quiet_messages {}
relativemode          #1
did_indent_on         #1
loaded_nerdtree_exec_menuitem #1
NERDTreeSortDirs       1
NERDTreeMapToggleFiles  F
syntastic_loc_list_height #10
fugitive_git_executable  git
airline_left_sep       >
NERDTreeDirArrows      1
syntastic_sort_aggregated_errors #1
EasyMotion_force_csapprox #0
EasyMotion_loaded     #1
group                  EasyMotionTarget2Second
EasyMotion_hl_inc_cursor  EasyMotionIncCursor
NERDTreeMapOpenExpl    e
syntastic_javascript_eslint_conf  
NERDTreeMapJumpFirstChild  K
loaded_nerd_tree      #1
EasyMotion_hl_group_shade  EasyMotionShade
airline_exclude_filetypes []
loaded_syntastic_javascript_eslint_checker #1
NERDTreeMapOpenRecursively  O
NERDTreeMapToggleBookmarks  B
EasyMotion_command_line_key_mappings {}
NERDTreeBookmarks     []
SyntasticHighlightingNotifier {'enabled': function('211'), 'reset': function('213'), '_setup': function('214'), 'New': function('210'), 'refresh': function('212')}
NERDTreeMapUpdir       u
NERDTreeMapUpdirKeepOpen  U
EasyMotion_landing_highlight #0
NERDTreeInvalidBookmarks []
NERDTreeQuitOnOpen     0
airline_section_warning  %{airline#util#wrap(airline#extensions#syntastic#get_warnings(),0)}%{airline#util#wrap(airline#extensions#whitespace#check(),0)}
loaded_pathogen       #1
loaded_fugitive       #1
airline#extensions#tabline#enabled #1
loaded_syntastic_notifier_highlighting #1
loaded_syntastic_javascript_jslint_checker #1
EasyMotion_prompt      Search for {n} character(s): 
b:syntastic_sign_ids  []
b:syntastic_loclist   {'decorate': function('231'), '_name': '', 'getFirstIssue': function('224'), 'sort': function('218'), 'current': function('216'), 'deploy': function('229'), 'setOwner': function('228'), 'extend': function('217'), '_owner': 7, '_rawLoclist': [], 'getName': function('225'), 'filter': function('236'), 'warnings': function('233'), 'getStatuslineFlag': function('223'), 'isEmpty': function('219'), 'destroy': function('230'), 'messages': function('235'), 'getRaw': function('221'), 'setloclist': function('237'), 'New': function('215'), 'getOwner': function('227'), 'show': function('238'), 'hasErrorsOrWarningsToDisplay': function('234'), 'getBuffers': function('222'), 'errors': function('232'), 'copyRaw': function('220'), 'setName': function('226')}
b:changedtick         #5
w:airline_lastmode     normal
w:paren_hl_on         #0
w:airline_active      #1
w:airline_current_mode  NORMAL
w:syntastic_loclist_set #0
t:NERDTreeBufName      NERD_tree_2
v:version             #704
v:beval_winnr         #0
v:lnum                #0
v:hlsearch            #1
v:scrollstart          Unknown
v:oldfiles            ['~/Desktop/requireTest/main.js', '~/Desktop/requireTest/NERD_tree_1', '~/Desktop/requireTest/NERD_tree_2', '~/Desktop/requireTest/lib/dashboard.js', '~/Desktop/requireTest/app/main.js', '~/Desktop/requireTest/index.html', '~/Desktop/requireTest/lib/require.js', '~/Desktop/requireTest/scripts/main.js', '~/Desktop/requireTest/scripts/require.js', '~/Desktop/requireTest/scripts/dashboard.js', '~/Desktop/WidgetDashboard/index.js', '~/Desktop/WidgetDashboard/NERD_tree_1', '~/Desktop/WidgetDashboard/NERD_tree_2', '~/Desktop/WidgetDashboard/package.json', '~/Desktop/WidgetDashboard/views/dashboard.jade', '~/Documents/clients/bac/package.json', '~/Documents/clients/bac/NERD_tree_1', '~/Documents/clients/bac/NERD_tree_2', '~/Documents/clients/bac/npm-shrinkwrap.json', '~/Documents/dev-boxes/bright-portal/bright-bso/package.json', '~/Documents/dev-boxes/bright-portal/bright-bso/NERD_tree_1', '~/Documents/dev-boxes/bright-portal/bright-bso/NERD_tree_2', '~/Documents/dev-boxes/bright-portal/bright-bso/npm-shrinkwrap.json', '~/Documents/dev-boxes/bright-portal/bright-promotions/package.json', '~/Documents/dev-boxes/bright-portal/bright-promotions/NERD_tree_1', '~/Documents/dev-boxes/bright-portal/bright-promotions/NERD_tree_2', '~/Documents/dev-boxes/bright-portal/bright-promotions/npm-shrinkwrap.json', '~/Documents/dev-boxes/bright-portal/bright-main/package.json', '~/Documents/dev-boxes/bright-portal/bright-main/NERD_tree_1', '~/Documents/dev-boxes/bright-portal/bright-main/NERD_tree_2', '~/Documents/dev-boxes/bright-portal/bright-bso/.git/MERGE_MSG', '~/Documents/dev-boxes/bright-portal/bright-main/npm-shrinkwrap.json', '~/Documents/dev-boxes/bright-portal/bright-promotions/.git/MERGE_MSG', '~/Documents/dev-boxes/bright-api/offers/services/set/update.js', '~/Documents/dev-boxes/bright-api/offers/NERD_tree_1', '~/Documents/dev-boxes/bright-api/offers/NERD_tree_2', '~/Documents/dev-boxes/bright-api/offers/services/set/create.js', '~/Documents/dev-boxes/bright-api/offers/services/set/delete.js', '~/Documents/dev-boxes/bright-api/offers/services/offers/update.js', '~/Documents/dev-boxes/bright-api/offers/services/offers/delete.js', '~/Documents/dev-boxes/bright-api/offers/services/set/get.js', '~/Documents/dev-boxes/bright-api/offers/services/offers/create.js', '~/Documents/dev-boxes/bright-portal/bright-bso/app/js/views/date_time_picker_start.js', '~/Documents/dev-boxes/bright-portal/bright-bso/app/js/views/date_time_picker_end.js', '~/Documents/dev-boxes/bright-portal/bright-promotions/app/js/views/date_time_picker_start.js', '~/Desktop/testttt/node_modules/bright-promotions/app/js/views/date_time_picker_start.js', '~/Desktop/testttt/NERD_tree_1', '~/Desktop/testttt/NERD_tree_2', '~/Documents/dev-boxes/bright-portal/bright-promotions/app/js/views/date_time_picker_end.js', '~/Documents/clients/bac/app/js/app.js', '~/Documents/clients/bac/Gruntfile.js', '~/Documents/clients/bac/node_modules/bright-promotions/app/js/views/date_time_picker_start.js', '~/Documents/clients/bac/node_modules/bright-promotions/app/js/controllers/promotion_sets_create_controller.js', '~/Documents/clients/bac/node_modules/bright-promotions/app/js/controllers/promotion_sets_controller.js', '~/Documents/clients/bac/node_modules/bright-promotions/app/js/controllers/promotions_create_controller.js', '~/Documents/clients/bac/node_modules/bright-promotions/app/js/models/promotion_model.js', '~/Documents/clients/bac/node_modules/bright-promotions/app/js/models/promotion_set_model.js', '~/Documents/dev-boxes/bright-portal/bright-promotions/app/js/controllers/promotion_sets_create_controller.js', '~/Documents/clients/bac/.git/MERGE_MSG', '~/Documents/clients/NERD_tree_1', '~/Documents/clients/NERD_tree_2', '~/Documents/clients/bac/config/index.js', '~/Documents/clients/bac/config/development.json', '~/Documents/clients/bac/config/production.json', '~/Desktop/WidgetDashboard/index.html', '~/Desktop/WidgetDashboard/scripts/app.js', '~/Desktop/WidgetDashboard/scripts/Dashboard.js', '~/Desktop/WidgetDashboard/scripts/Widget.js', '~/Desktop/WidgetDashboard/js/app.js', '~/Desktop/WidgetDashboard/js/Dashboard.js', '~/Desktop/WidgetDashboard/js/Widget.js', '~/Desktop/Widget Dashboard/NERD_tree_1', '~/Desktop/Widget Dashboard/NERD_tree_2', '~/Documents/dev-boxes/bright-api/offers/lib/validateBsoStampsScale.js', '~/Documents/dev-boxes/bright-api/NERD_tree_1', '~/Documents/dev-boxes/bright-api/NERD_tree_2', '~/Documents/tools/node-music-player/config.js', '~/Documents/tools/node-music-player/NERD_tree_1', '~/Documents/tools/node-music-player/NERD_tree_2', '~/Documents/tools/node-music-player/library_functions.js', '~/Desktop/NERD_tree_1', '~/Desktop/NERD_tree_2', '~/Desktop/Release.sh', '~/Documents/dev-boxes/bright-api/ux-api/.git/COMMIT_EDITMSG', '~/Documents/dev-boxes/bright-api/ux-api/NERD_tree_1', '~/Documents/dev-boxes/bright-api/ux-api/package.json', '~/Documents/dev-boxes/bright-api/offers/package.json', '~/Documents/dev-boxes/bright-portal/bac/.git/MERGE_MSG', '~/Documents/dev-boxes/bright-portal/bac/NERD_tree_1', '~/Documents/dev-boxes/bright-portal/bac/package.json', '~/Documents/dev-boxes/bright-portal/bright-main/.git/MERGE_MSG', '~/Documents/dev-boxes/bright-api/offers/services/offers/schema.js', '~/Documents/dev-boxes/bright-api/offers/.git/MERGE_MSG', '~/Documents/dev-boxes/bright-api/ux-api/.git/MERGE_MSG', '~/Documents/dev-boxes/bright-api/ux-api/services/promotions/get.js', '~/Documents/dev-boxes/bright-api/ux-api/NERD_tree_2', '~/Documents/dev-boxes/bright-portal/bright-promotions/app/templates/promotion_set/index.hbs', '~/Documents/dev-boxes/bright-api/offers/.git/COMMIT_EDITMSG', '~/Documents/tools/node-taglib/index.js', '~/Documents/tools/node-taglib/NERD_tree_1']
v:dying               #0
v:windowid            #0
v:termresponse         ^[[>0;95;c
v:lang                 en_US.UTF-8
v:count               #0
v:progpath             vim
v:progname             vim
v:cmdbang             #0
v:foldlevel           #0
v:operator             d
v:ctype                en_US.UTF-8
v:prevcount           #0
v:register             "
v:mouse_win           #0
v:count1              #1
v:foldstart           #0
v:foldend             #0
v:profiling           #0
v:beval_col           #0
v:errmsg               E492: Not an editor command: See `:help license`.
v:beval_lnum          #0
v:mouse_lnum          #0
v:insertmode           i
v:beval_bufnr         #0
v:shell_error         #0
v:lc_time              en_US.UTF-8
v:searchforward       #1
v:mouse_col           #0
v:statusmsg            No abbreviation found
v:warningmsg           search hit BOTTOM, continuing at TOP